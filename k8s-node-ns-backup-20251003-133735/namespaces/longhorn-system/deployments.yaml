apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      driver.longhorn.io/git-commit: 1f343ee4c467de1264682ecb069d8f2a62850977
      driver.longhorn.io/version: v1.8.0
      longhorn.io/last-applied-tolerations: '[]'
    creationTimestamp: "2025-02-07T11:55:33Z"
    generation: 1
    labels:
      app: csi-attacher
      longhorn.io/managed-by: longhorn-manager
    name: csi-attacher
    namespace: longhorn-system
    resourceVersion: "91799002"
    uid: 6ab8260b-3685-45c6-985c-ec192c1e56f1
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-attacher
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-attacher
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - csi-attacher
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --v=2
          - --csi-address=$(ADDRESS)
          - --timeout=1m50s
          - --leader-election
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --kube-api-qps=50
          - --kube-api-burst=100
          - --http-endpoint=:8000
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: longhornio/csi-attacher:v4.8.0
          imagePullPolicy: IfNotPresent
          name: csi-attacher
          ports:
          - containerPort: 8000
            name: csi-attacher
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi/
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: longhorn-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/driver.longhorn.io
            type: DirectoryOrCreate
          name: socket-dir
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-02-07T11:55:34Z"
      lastUpdateTime: "2025-02-07T11:56:37Z"
      message: ReplicaSet "csi-attacher-6fcbcb955" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-31T01:23:06Z"
      lastUpdateTime: "2025-07-31T01:23:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      driver.longhorn.io/git-commit: 1f343ee4c467de1264682ecb069d8f2a62850977
      driver.longhorn.io/version: v1.8.0
      longhorn.io/last-applied-tolerations: '[]'
    creationTimestamp: "2025-02-07T11:55:33Z"
    generation: 1
    labels:
      app: csi-provisioner
      longhorn.io/managed-by: longhorn-manager
    name: csi-provisioner
    namespace: longhorn-system
    resourceVersion: "85050271"
    uid: 7888102b-ca8e-43c9-8399-225533424326
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-provisioner
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-provisioner
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - csi-provisioner
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --v=2
          - --csi-address=$(ADDRESS)
          - --timeout=1m50s
          - --leader-election
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --default-fstype=ext4
          - --kube-api-qps=50
          - --kube-api-burst=100
          - --http-endpoint=:8000
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: longhornio/csi-provisioner:v5.1.0-20241220
          imagePullPolicy: IfNotPresent
          name: csi-provisioner
          ports:
          - containerPort: 8000
            name: csi-provisioner
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi/
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: longhorn-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/driver.longhorn.io
            type: DirectoryOrCreate
          name: socket-dir
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-02-07T11:55:34Z"
      lastUpdateTime: "2025-02-07T11:57:01Z"
      message: ReplicaSet "csi-provisioner-598bb7c5fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-18T00:59:25Z"
      lastUpdateTime: "2025-07-18T00:59:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      driver.longhorn.io/git-commit: 1f343ee4c467de1264682ecb069d8f2a62850977
      driver.longhorn.io/version: v1.8.0
      longhorn.io/last-applied-tolerations: '[]'
    creationTimestamp: "2025-02-07T11:55:33Z"
    generation: 1
    labels:
      app: csi-resizer
      longhorn.io/managed-by: longhorn-manager
    name: csi-resizer
    namespace: longhorn-system
    resourceVersion: "72238683"
    uid: 5abf94bf-4fad-4eb5-9d58-9b0e9e784232
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-resizer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-resizer
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - csi-resizer
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --v=2
          - --csi-address=$(ADDRESS)
          - --timeout=1m50s
          - --leader-election
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --kube-api-qps=50
          - --kube-api-burst=100
          - --http-endpoint=:8000
          - --handle-volume-inuse-error=false
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: longhornio/csi-resizer:v1.13.1
          imagePullPolicy: IfNotPresent
          name: csi-resizer
          ports:
          - containerPort: 8000
            name: csi-resizer
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi/
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: longhorn-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/driver.longhorn.io
            type: DirectoryOrCreate
          name: socket-dir
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-02-07T11:55:34Z"
      lastUpdateTime: "2025-02-07T11:57:01Z"
      message: ReplicaSet "csi-resizer-68d958d4b6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-23T16:34:47Z"
      lastUpdateTime: "2025-06-23T16:34:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      driver.longhorn.io/git-commit: 1f343ee4c467de1264682ecb069d8f2a62850977
      driver.longhorn.io/version: v1.8.0
      longhorn.io/last-applied-tolerations: '[]'
    creationTimestamp: "2025-02-07T11:55:33Z"
    generation: 1
    labels:
      app: csi-snapshotter
      longhorn.io/managed-by: longhorn-manager
    name: csi-snapshotter
    namespace: longhorn-system
    resourceVersion: "110690733"
    uid: 5b31c8aa-efd9-45e1-9ac9-4270cb588c4b
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-snapshotter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-snapshotter
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - csi-snapshotter
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --v=2
          - --csi-address=$(ADDRESS)
          - --timeout=1m50s
          - --leader-election
          - --leader-election-namespace=$(POD_NAMESPACE)
          - --kube-api-qps=50
          - --kube-api-burst=100
          - --http-endpoint=:8000
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: longhornio/csi-snapshotter:v8.2.0
          imagePullPolicy: IfNotPresent
          name: csi-snapshotter
          ports:
          - containerPort: 8000
            name: csi-snapshotter
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi/
            name: socket-dir
        dnsPolicy: ClusterFirst
        priorityClassName: longhorn-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/driver.longhorn.io
            type: DirectoryOrCreate
          name: socket-dir
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-02-07T11:55:34Z"
      lastUpdateTime: "2025-02-07T11:56:45Z"
      message: ReplicaSet "csi-snapshotter-6b4f685f7d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-09-08T01:23:26Z"
      lastUpdateTime: "2025-09-08T01:23:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: longhorn
      meta.helm.sh/release-namespace: longhorn-system
    creationTimestamp: "2025-02-07T11:53:40Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.8.0
      helm.sh/chart: longhorn-1.8.0
    name: longhorn-driver-deployer
    namespace: longhorn-system
    resourceVersion: "72238334"
    uid: ce89614c-50a0-4ccd-be17-3de905a863b2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: longhorn-driver-deployer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: longhorn-driver-deployer
          app.kubernetes.io/instance: longhorn
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: longhorn
          app.kubernetes.io/version: v1.8.0
          helm.sh/chart: longhorn-1.8.0
      spec:
        containers:
        - command:
          - longhorn-manager
          - -d
          - deploy-driver
          - --manager-image
          - longhornio/longhorn-manager:v1.8.0
          - --manager-url
          - http://longhorn-backend:9500/v1
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SERVICE_ACCOUNT
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: CSI_ATTACHER_IMAGE
            value: longhornio/csi-attacher:v4.8.0
          - name: CSI_PROVISIONER_IMAGE
            value: longhornio/csi-provisioner:v5.1.0-20241220
          - name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
            value: longhornio/csi-node-driver-registrar:v2.13.0
          - name: CSI_RESIZER_IMAGE
            value: longhornio/csi-resizer:v1.13.1
          - name: CSI_SNAPSHOTTER_IMAGE
            value: longhornio/csi-snapshotter:v8.2.0
          - name: CSI_LIVENESS_PROBE_IMAGE
            value: longhornio/livenessprobe:v2.15.0
          image: longhornio/longhorn-manager:v1.8.0
          imagePullPolicy: IfNotPresent
          name: longhorn-driver-deployer
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1)
            != "200" ]; do echo waiting; sleep 2; done
          image: longhornio/longhorn-manager:v1.8.0
          imagePullPolicy: IfNotPresent
          name: wait-longhorn-manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: longhorn-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsUser: 0
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-02-07T11:53:40Z"
      lastUpdateTime: "2025-02-07T11:54:32Z"
      message: ReplicaSet "longhorn-driver-deployer-86695f796b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-23T16:34:16Z"
      lastUpdateTime: "2025-06-23T16:34:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: longhorn
      meta.helm.sh/release-namespace: longhorn-system
    creationTimestamp: "2025-02-07T11:53:40Z"
    generation: 1
    labels:
      app: longhorn-ui
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.8.0
      helm.sh/chart: longhorn-1.8.0
    name: longhorn-ui
    namespace: longhorn-system
    resourceVersion: "72238424"
    uid: f4352935-f54b-4cca-a3ab-dce1e2cc2560
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: longhorn-ui
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: longhorn-ui
          app.kubernetes.io/instance: longhorn
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: longhorn
          app.kubernetes.io/version: v1.8.0
          helm.sh/chart: longhorn-1.8.0
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - longhorn-ui
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: LONGHORN_MANAGER_IP
            value: http://longhorn-backend:9500
          - name: LONGHORN_UI_PORT
            value: "8000"
          image: longhornio/longhorn-ui:v1.8.0
          imagePullPolicy: IfNotPresent
          name: longhorn-ui
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/cache/nginx/
            name: nginx-cache
          - mountPath: /var/config/nginx/
            name: nginx-config
          - mountPath: /var/run/
            name: var-run
        dnsPolicy: ClusterFirst
        priorityClassName: longhorn-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-ui-service-account
        serviceAccountName: longhorn-ui-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: nginx-cache
        - emptyDir: {}
          name: nginx-config
        - emptyDir: {}
          name: var-run
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-02-07T11:53:40Z"
      lastUpdateTime: "2025-02-07T11:54:04Z"
      message: ReplicaSet "longhorn-ui-5fbbcc8fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-23T16:34:23Z"
      lastUpdateTime: "2025-06-23T16:34:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
kind: List
metadata:
  resourceVersion: ""
