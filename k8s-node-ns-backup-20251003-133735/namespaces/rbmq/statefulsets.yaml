apiVersion: v1
items:
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    creationTimestamp: "2025-02-21T15:48:47Z"
    generation: 1
    labels:
      app.kubernetes.io/component: rabbitmq
      app.kubernetes.io/name: rabbitmq-cluster
      app.kubernetes.io/part-of: rabbitmq
    name: rabbitmq-cluster-server
    namespace: rbmq
    ownerReferences:
    - apiVersion: rabbitmq.com/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: RabbitmqCluster
      name: rabbitmq-cluster
      uid: df0e84b3-643d-42c7-960a-e7f9daca5421
    resourceVersion: "70962013"
    uid: 3c5ea3c8-a946-4043-8866-28d13d2d3385
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: Parallel
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: rabbitmq-cluster
    serviceName: rabbitmq-cluster-nodes
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: rabbitmq
          app.kubernetes.io/name: rabbitmq-cluster
          app.kubernetes.io/part-of: rabbitmq
      spec:
        automountServiceAccountToken: true
        containers:
        - env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: K8S_SERVICE_NAME
            value: rabbitmq-cluster-nodes
          - name: RABBITMQ_ENABLED_PLUGINS_FILE
            value: /operator/enabled_plugins
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_NODENAME
            value: rabbit@$(MY_POD_NAME).$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE)
          - name: K8S_HOSTNAME_SUFFIX
            value: .$(K8S_SERVICE_NAME).$(MY_POD_NAMESPACE)
          image: docker.io/bitnami/rabbitmq:4.0.6-debian-12-r0
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/bash
                - -c
                - if [ ! -z "$(cat /etc/pod-info/skipPreStopChecks)" ]; then exit
                  0; fi; rabbitmq-upgrade await_online_quorum_plus_one -t 604800 &&
                  rabbitmq-upgrade await_online_synchronized_mirror -t 604800 || true
                  && rabbitmq-upgrade drain -t 604800
          name: rabbitmq
          ports:
          - containerPort: 4369
            name: epmd
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          - containerPort: 15672
            name: management
            protocol: TCP
          - containerPort: 15692
            name: prometheus
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: amqp
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: "1"
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/rabbitmq/
            name: rabbitmq-erlang-cookie
          - mountPath: /var/lib/rabbitmq/mnesia/
            name: persistence
          - mountPath: /operator
            name: rabbitmq-plugins
          - mountPath: /etc/rabbitmq/conf.d/10-operatorDefaults.conf
            name: rabbitmq-confd
            subPath: operatorDefaults.conf
          - mountPath: /etc/rabbitmq/conf.d/90-userDefinedConfiguration.conf
            name: rabbitmq-confd
            subPath: userDefinedConfiguration.conf
          - mountPath: /etc/pod-info/
            name: pod-info
          - mountPath: /etc/rabbitmq/conf.d/11-default_user.conf
            name: rabbitmq-confd
            subPath: default_user.conf
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - cp /tmp/erlang-cookie-secret/.erlang.cookie /var/lib/rabbitmq/.erlang.cookie
            && chmod 600 /var/lib/rabbitmq/.erlang.cookie ; cp /tmp/rabbitmq-plugins/enabled_plugins
            /operator/enabled_plugins ; echo '[default]' > /var/lib/rabbitmq/.rabbitmqadmin.conf
            && sed -e 's/default_user/username/' -e 's/default_pass/password/' /tmp/default_user.conf
            >> /var/lib/rabbitmq/.rabbitmqadmin.conf && chmod 600 /var/lib/rabbitmq/.rabbitmqadmin.conf
            ; sleep 30
          image: docker.io/bitnami/rabbitmq:4.0.6-debian-12-r0
          imagePullPolicy: IfNotPresent
          name: setup-container
          resources:
            limits:
              cpu: 100m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/rabbitmq-plugins/
            name: plugins-conf
          - mountPath: /var/lib/rabbitmq/
            name: rabbitmq-erlang-cookie
          - mountPath: /tmp/erlang-cookie-secret/
            name: erlang-cookie-secret
          - mountPath: /operator
            name: rabbitmq-plugins
          - mountPath: /var/lib/rabbitmq/mnesia/
            name: persistence
          - mountPath: /tmp/default_user.conf
            name: rabbitmq-confd
            subPath: default_user.conf
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 0
          runAsUser: 999
        serviceAccount: rabbitmq-cluster-server
        serviceAccountName: rabbitmq-cluster-server
        terminationGracePeriodSeconds: 604800
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: rabbitmq-cluster
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - configMap:
            defaultMode: 420
            name: rabbitmq-cluster-plugins-conf
          name: plugins-conf
        - name: rabbitmq-confd
          projected:
            defaultMode: 420
            sources:
            - configMap:
                items:
                - key: operatorDefaults.conf
                  path: operatorDefaults.conf
                - key: userDefinedConfiguration.conf
                  path: userDefinedConfiguration.conf
                name: rabbitmq-cluster-server-conf
            - secret:
                items:
                - key: default_user.conf
                  path: default_user.conf
                name: rabbitmq-cluster-default-user
        - emptyDir: {}
          name: rabbitmq-erlang-cookie
        - name: erlang-cookie-secret
          secret:
            defaultMode: 420
            secretName: rabbitmq-cluster-erlang-cookie
        - emptyDir: {}
          name: rabbitmq-plugins
        - downwardAPI:
            defaultMode: 420
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.labels['skipPreStopChecks']
              path: skipPreStopChecks
          name: pod-info
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: rabbitmq
          app.kubernetes.io/name: rabbitmq-cluster
          app.kubernetes.io/part-of: rabbitmq
        name: persistence
        namespace: rbmq
        ownerReferences:
        - apiVersion: rabbitmq.com/v1beta1
          blockOwnerDeletion: false
          controller: true
          kind: RabbitmqCluster
          name: rabbitmq-cluster
          uid: df0e84b3-643d-42c7-960a-e7f9daca5421
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 3
    collisionCount: 0
    currentReplicas: 3
    currentRevision: rabbitmq-cluster-server-cc559864f
    observedGeneration: 1
    readyReplicas: 3
    replicas: 3
    updateRevision: rabbitmq-cluster-server-cc559864f
    updatedReplicas: 3
kind: List
metadata:
  resourceVersion: ""
