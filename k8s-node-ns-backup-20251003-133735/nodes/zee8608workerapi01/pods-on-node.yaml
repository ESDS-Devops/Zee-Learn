apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9402"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-04-16T11:38:04Z"
    generateName: cert-manager-cainjector-67ff4bc9cd-
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.17.0
      pod-template-hash: 67ff4bc9cd
    name: cert-manager-cainjector-67ff4bc9cd-zlxr5
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-cainjector-67ff4bc9cd
      uid: acb2fce8-3b1f-43e7-a5d4-4e556c2a9b9e
    resourceVersion: "72238337"
    uid: bfda7dcf-2a43-4348-b99c-b2b518b22247
  spec:
    containers:
    - args:
      - --v=2
      - --leader-election-namespace=kube-system
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/jetstack/cert-manager-cainjector:v1.17.0
      imagePullPolicy: IfNotPresent
      name: cert-manager-cainjector
      ports:
      - containerPort: 9402
        name: http-metrics
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pg56t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager-cainjector
    serviceAccountName: cert-manager-cainjector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pg56t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9f83f5db4c927a34da7d12446bd87e3581029c391751615d523af83bd5ac5aad
      image: quay.io/jetstack/cert-manager-cainjector:v1.17.0
      imageID: quay.io/jetstack/cert-manager-cainjector@sha256:63ea34d0e82ebfd91242498c54ad104d6bce7a56c7a2e24de5461aabd744a9b2
      lastState: {}
      name: cert-manager-cainjector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:16Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.208
    podIPs:
    - ip: 192.168.5.208
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9402"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-04-16T11:38:04Z"
    generateName: cert-manager-webhook-db89558c5-
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.17.0
      pod-template-hash: db89558c5
    name: cert-manager-webhook-db89558c5-lsvdj
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-webhook-db89558c5
      uid: 0ce39203-c636-419c-9cc4-e83f07228852
    resourceVersion: "72238788"
    uid: 0e2d0f71-7a63-40d8-8fae-4f4fb39003ed
  spec:
    containers:
    - args:
      - --v=2
      - --secure-port=10250
      - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
      - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
      - --dynamic-serving-dns-names=cert-manager-webhook
      - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
      - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/jetstack/cert-manager-webhook:v1.17.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: 6080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cert-manager-webhook
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      - containerPort: 6080
        name: healthcheck
        protocol: TCP
      - containerPort: 9402
        name: http-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 6080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qrrjv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager-webhook
    serviceAccountName: cert-manager-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qrrjv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2327fe911584c0b28c17d6233d3268a45f9ea572ae9c2b9a71f45fe3695a5ecd
      image: quay.io/jetstack/cert-manager-webhook:v1.17.0
      imageID: quay.io/jetstack/cert-manager-webhook@sha256:6e8f1c96b7acd9526b7dec7ce8af45e4a774877e24be183e3ce36a25c9d5ed3b
      lastState: {}
      name: cert-manager-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:20Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.212
    podIPs:
    - ip: 192.168.5.212
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T10:56:50Z"
    generateName: mongodb-kubernetes-operator-7b7b59cc5c-
    labels:
      name: mongodb-kubernetes-operator
      pod-template-hash: 7b7b59cc5c
    name: mongodb-kubernetes-operator-7b7b59cc5c-7mmfb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mongodb-kubernetes-operator-7b7b59cc5c
      uid: 2ee30a8a-4784-4f5e-a810-22c666cd85a5
    resourceVersion: "72238800"
    uid: 0a4bc8b6-d47d-45eb-afc8-50151434d90c
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: name
              operator: In
              values:
              - mongodb-kubernetes-operator
          topologyKey: kubernetes.io/hostname
    containers:
    - command:
      - /usr/local/bin/entrypoint
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_NAME
        value: mongodb-kubernetes-operator
      - name: AGENT_IMAGE
        value: quay.io/mongodb/mongodb-agent-ubi:108.0.2.8729-1
      - name: VERSION_UPGRADE_HOOK_IMAGE
        value: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.9
      - name: READINESS_PROBE_IMAGE
        value: quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.22
      - name: MONGODB_IMAGE
        value: mongodb-community-server
      - name: MONGODB_REPO_URL
        value: docker.io/mongodb
      - name: MDB_IMAGE_TYPE
        value: ubi8
      image: quay.io/mongodb/mongodb-kubernetes-operator:0.12.0
      imagePullPolicy: Always
      name: mongodb-kubernetes-operator
      resources:
        limits:
          cpu: 1100m
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x9g6q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 2000
    serviceAccount: mongodb-kubernetes-operator
    serviceAccountName: mongodb-kubernetes-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-x9g6q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T10:57:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T10:56:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4c9d9224df5e999bc69f274811dfbb7ce285acf7dbe6ebf6ca42eed8090b7237
      image: quay.io/mongodb/mongodb-kubernetes-operator:0.12.0
      imageID: quay.io/mongodb/mongodb-kubernetes-operator@sha256:f529e6365d11392f4a6178471a2e65515fd9169e4395a4eb5725ba119744d6e0
      lastState: {}
      name: mongodb-kubernetes-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:55Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.216
    podIPs:
    - ip: 192.168.5.216
    qosClass: Burstable
    startTime: "2025-05-30T10:57:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      agent.mongodb.com/version: "9"
    creationTimestamp: "2025-06-23T16:34:56Z"
    generateName: productmaster-mongodb-
    labels:
      app: productmaster-mongodb-svc
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: productmaster-mongodb-55d6fcd77f
      statefulset.kubernetes.io/pod-name: productmaster-mongodb-0
    name: productmaster-mongodb-0
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: productmaster-mongodb
      uid: 42e69253-d5c8-4b50-b845-6cbc20245629
    resourceVersion: "72241892"
    uid: 351eda94-88be-4bd4-8055-b01688cc1df2
  spec:
    containers:
    - args:
      - ""
      command:
      - /bin/sh
      - -c
      - "\nif [ -e \"/hooks/version-upgrade\" ]; then\n\t#run post-start hook to handle
        version changes (if exists)\n    /hooks/version-upgrade\nfi\n\n# wait for
        config and keyfile to be created by the agent\nwhile ! [ -f /data/automation-mongod.conf
        -a -f /var/lib/mongodb-mms-automation/authentication/keyfile ]; do sleep 3
        ; done ; sleep 2 ;\n\n# start mongod with this configuration\nexec mongod
        -f /data/automation-mongod.conf;\n\n"
      env:
      - name: AGENT_STATUS_FILEPATH
        value: /healthstatus/agent-health-status.json
      image: docker.io/mongodb/mongodb-community-server:7.0.2-ubi8
      imagePullPolicy: IfNotPresent
      name: mongod
      resources:
        limits:
          cpu: "1"
          memory: 500M
        requests:
          cpu: 500m
          memory: 400M
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data-volume
      - mountPath: /healthstatus
        name: healthstatus
      - mountPath: /hooks
        name: hooks
      - mountPath: /var/log/mongodb-mms-automation
        name: logs-volume
      - mountPath: /var/lib/mongodb-mms-automation/authentication
        name: productmaster-mongodb-keyfile
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7k7ll
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |-
        current_uid=$(id -u)
        declare -r current_uid
        if ! grep -q "${current_uid}" /etc/passwd ; then
        sed -e "s/^mongodb:/builder:/" /etc/passwd > /tmp/passwd
        echo "mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash" >> /tmp/passwd
        export NSS_WRAPPER_PASSWD=/tmp/passwd
        export LD_PRELOAD=libnss_wrapper.so
        export NSS_WRAPPER_GROUP=/etc/group
        fi
        agent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools -logFile /var/log/mongodb-mms-automation/automation-agent.log -logLevel INFO -maxLogFileDurationHrs 24
      env:
      - name: AGENT_STATUS_FILEPATH
        value: /var/log/mongodb-mms-automation/healthstatus/agent-health-status.json
      - name: AUTOMATION_CONFIG_MAP
        value: productmaster-mongodb-config
      - name: HEADLESS_AGENT
        value: "true"
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/mongodb/mongodb-agent-ubi:108.0.2.8729-1
      imagePullPolicy: Always
      name: mongodb-agent
      readinessProbe:
        exec:
          command:
          - /opt/scripts/readinessprobe
        failureThreshold: 40
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 500M
        requests:
          cpu: 500m
          memory: 400M
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/scripts
        name: agent-scripts
      - mountPath: /var/lib/automation/config
        name: automation-config
        readOnly: true
      - mountPath: /data
        name: data-volume
      - mountPath: /var/log/mongodb-mms-automation/healthstatus
        name: healthstatus
      - mountPath: /var/log/mongodb-mms-automation
        name: logs-volume
      - mountPath: /var/lib/mongodb-mms-automation/authentication
        name: productmaster-mongodb-keyfile
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7k7ll
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: productmaster-mongodb-0
    initContainers:
    - command:
      - cp
      - version-upgrade-hook
      - /hooks/version-upgrade
      image: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.9
      imagePullPolicy: Always
      name: mongod-posthook
      resources:
        limits:
          cpu: "1"
          memory: 500M
        requests:
          cpu: 500m
          memory: 400M
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hooks
        name: hooks
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7k7ll
        readOnly: true
    - command:
      - cp
      - /probes/readinessprobe
      - /opt/scripts/readinessprobe
      image: quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.22
      imagePullPolicy: Always
      name: mongodb-agent-readinessprobe
      resources:
        limits:
          cpu: "1"
          memory: 500M
        requests:
          cpu: 500m
          memory: 400M
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/scripts
        name: agent-scripts
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7k7ll
        readOnly: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 2000
      runAsNonRoot: true
      runAsUser: 2000
    serviceAccount: mongodb-database
    serviceAccountName: mongodb-database
    subdomain: productmaster-mongodb-svc
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: logs-volume
      persistentVolumeClaim:
        claimName: logs-volume-productmaster-mongodb-0
    - name: data-volume
      persistentVolumeClaim:
        claimName: data-volume-productmaster-mongodb-0
    - emptyDir: {}
      name: agent-scripts
    - name: automation-config
      secret:
        defaultMode: 416
        secretName: productmaster-mongodb-config
    - emptyDir: {}
      name: healthstatus
    - emptyDir: {}
      name: hooks
    - emptyDir: {}
      name: productmaster-mongodb-keyfile
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-7k7ll
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:40:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:41:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:41:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bdec309df088fe26c36e03a21faa952b4a56169b629d7e4a90c941b6eb3e66f5
      image: docker.io/mongodb/mongodb-community-server:7.0.2-ubi8
      imageID: docker.io/mongodb/mongodb-community-server@sha256:a66c0a69128bc706d7fa91996371dcffc5b5438106471a8c0ede507a796ed37b
      lastState: {}
      name: mongod
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:40:15Z"
    - containerID: containerd://0f625f6c75f0892b7786f00a9b08cb64692861882d0b562bf855355480e47fe2
      image: quay.io/mongodb/mongodb-agent-ubi:108.0.2.8729-1
      imageID: quay.io/mongodb/mongodb-agent-ubi@sha256:98815e8eecc2b366cdf0589a5a7d68bc14e82477f48d24da90064175cead6c24
      lastState: {}
      name: mongodb-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:40:45Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    initContainerStatuses:
    - containerID: containerd://5a022921ff8e18f706b621e34fcd6a92efb813afad4a53f57a6eb9a194811b3d
      image: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.9
      imageID: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook@sha256:22ba1fb78ccdc7687a058776a72f34bd6714e24abaf2ee5329b31c88ae74cd3b
      lastState: {}
      name: mongod-posthook
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5a022921ff8e18f706b621e34fcd6a92efb813afad4a53f57a6eb9a194811b3d
          exitCode: 0
          finishedAt: "2025-06-23T16:39:39Z"
          reason: Completed
          startedAt: "2025-06-23T16:39:39Z"
    - containerID: containerd://aaefa1ba95484119875959228d5e464a4db0a3abb9c155b981f1d8fcaf6eec24
      image: quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.22
      imageID: quay.io/mongodb/mongodb-kubernetes-readinessprobe@sha256:0aeb9ed45626241375b042738da2f7dbc837d0b1a54725a27bca77e2aa4b0163
      lastState: {}
      name: mongodb-agent-readinessprobe
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://aaefa1ba95484119875959228d5e464a4db0a3abb9c155b981f1d8fcaf6eec24
          exitCode: 0
          finishedAt: "2025-06-23T16:40:08Z"
          reason: Completed
          startedAt: "2025-06-23T16:40:08Z"
    phase: Running
    podIP: 192.168.5.230
    podIPs:
    - ip: 192.168.5.230
    qosClass: Burstable
    startTime: "2025-06-23T16:39:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-20T20:57:37Z"
    generateName: kube-flannel-ds-
    labels:
      app: flannel
      controller-revision-hash: 6d455c8676
      pod-template-generation: "1"
      tier: node
    name: kube-flannel-ds-cr6sd
    namespace: kube-flannel
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-flannel-ds
      uid: f5ae3f66-75e9-4802-8abb-8c580d4ab38a
    resourceVersion: "72238103"
    uid: 3dfa0dc9-de88-4d6f-8f1c-8dce0cfd0c00
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - args:
      - --ip-masq
      - --kube-subnet-mgr
      command:
      - /opt/bin/flanneld
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: EVENT_QUEUE_DEPTH
        value: "5000"
      image: ghcr.io/flannel-io/flannel:v0.26.4
      imagePullPolicy: IfNotPresent
      name: kube-flannel
      resources:
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/flannel
        name: run
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn7zp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - -f
      - /flannel
      - /opt/cni/bin/flannel
      command:
      - cp
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.6.2-flannel1
      imagePullPolicy: IfNotPresent
      name: install-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /opt/cni/bin
        name: cni-plugin
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn7zp
        readOnly: true
    - args:
      - -f
      - /etc/kube-flannel/cni-conf.json
      - /etc/cni/net.d/10-flannel.conflist
      command:
      - cp
      image: ghcr.io/flannel-io/flannel:v0.26.4
      imagePullPolicy: IfNotPresent
      name: install-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/cni/net.d
        name: cni
      - mountPath: /etc/kube-flannel/
        name: flannel-cfg
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gn7zp
        readOnly: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: flannel
    serviceAccountName: flannel
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /run/flannel
        type: ""
      name: run
    - hostPath:
        path: /opt/cni/bin
        type: ""
      name: cni-plugin
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni
    - configMap:
        defaultMode: 420
        name: kube-flannel-cfg
      name: flannel-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - name: kube-api-access-gn7zp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:58:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:57:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6895c95989207be256e766f95af073174a5bf3684ee6bb17899cf293fdd20836
      image: ghcr.io/flannel-io/flannel:v0.26.4
      imageID: ghcr.io/flannel-io/flannel@sha256:b4dcecb6192041d99f57999d70e101c22536c2b058b99f6d00497ca99c470f53
      lastState: {}
      name: kube-flannel
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:33:45Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    initContainerStatuses:
    - containerID: containerd://e63a2663a687bd34be0c276e7dd76236461cd43878453777cabc829747f25fac
      image: ghcr.io/flannel-io/flannel-cni-plugin:v1.6.2-flannel1
      imageID: ghcr.io/flannel-io/flannel-cni-plugin@sha256:f1812994f0edbcb5bb5ccb63be2147ba6ad10e1faaa7ca9fcdad4f441739d84f
      lastState: {}
      name: install-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://e63a2663a687bd34be0c276e7dd76236461cd43878453777cabc829747f25fac
          exitCode: 0
          finishedAt: "2025-06-23T16:33:43Z"
          reason: Completed
          startedAt: "2025-06-23T16:33:43Z"
    - containerID: containerd://54f8d5e97c737409507fabfa9f5d80fbc088ef4e19f94469a572f51501dbf39a
      image: ghcr.io/flannel-io/flannel:v0.26.4
      imageID: ghcr.io/flannel-io/flannel@sha256:b4dcecb6192041d99f57999d70e101c22536c2b058b99f6d00497ca99c470f53
      lastState: {}
      name: install-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://54f8d5e97c737409507fabfa9f5d80fbc088ef4e19f94469a572f51501dbf39a
          exitCode: 0
          finishedAt: "2025-06-23T16:33:44Z"
          reason: Completed
          startedAt: "2025-06-23T16:33:44Z"
    phase: Running
    podIP: 10.48.219.138
    podIPs:
    - ip: 10.48.219.138
    qosClass: Burstable
    startTime: "2025-06-20T20:57:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-07T08:15:49Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: 79c94c5cb4
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-b9ddc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 27c3a05f-34c7-4b31-afaa-6a1d52f7b481
    resourceVersion: "70967459"
    uid: a8edbda6-ef42-4071-9046-ccaa63309e8d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.30.9
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kqxt9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-kqxt9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:28:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T08:15:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:28:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:28:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T08:15:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://859dbaf47883051ffe7181c38eea96b73568ffce01420f97acfa191799e6f487
      image: registry.k8s.io/kube-proxy:v1.30.9
      imageID: registry.k8s.io/kube-proxy@sha256:d78dc40d97ff862fd8ddb47f80a5ba3feec17bc73e58a60e963885e33faa0083
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-06-20T20:28:47Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 10.48.219.138
    podIPs:
    - ip: 10.48.219.138
    qosClass: BestEffort
    startTime: "2025-02-07T08:15:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:04Z"
    generateName: default-http-backend-5bf7597cb7-
    labels:
      app: kubesphere
      component: kubesphere-router
      pod-template-hash: 5bf7597cb7
    name: default-http-backend-5bf7597cb7-45crg
    namespace: kubesphere-controls-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: default-http-backend-5bf7597cb7
      uid: 3539d72e-9db2-4243-95fd-e40b9d5b4d33
    resourceVersion: "72238358"
    uid: 9d3f5a48-7ebe-48d3-aa25-fa8ec09450d2
  spec:
    containers:
    - image: mirrorgooglecontainers/defaultbackend-amd64:1.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: default-http-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        limits:
          cpu: 10m
          memory: 20Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtzlc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mtzlc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:18Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:18Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f39ef9d5911da73951e55cc911345e5276936d38f8f173b7ed5e926ef58021f8
      image: docker.io/mirrorgooglecontainers/defaultbackend-amd64:1.4
      imageID: docker.io/mirrorgooglecontainers/defaultbackend-amd64@sha256:05cb942c5ff93ebb6c63d48737cd39d4fa1c6fa9dc7a4d53b2709f5b3c8333e8
      lastState: {}
      name: default-http-backend
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:18Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.205
    podIPs:
    - ip: 192.168.5.205
    qosClass: Guaranteed
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-23T16:45:30Z"
    generateName: fluent-bit-
    labels:
      app.kubernetes.io/name: fluent-bit
      controller-revision-hash: 767db976
      pod-template-generation: "1"
    name: fluent-bit-x6fdb
    namespace: kubesphere-logging-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluent-bit
      uid: 2576eaf5-f050-486e-aa27-04a9d8690e49
    resourceVersion: "72244768"
    uid: b26f1498-a10c-4a54-9219-c53419f79e91
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: kubesphere/fluent-bit:v1.9.4
      imagePullPolicy: IfNotPresent
      name: fluent-bit
      ports:
      - containerPort: 2020
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 200Mi
        requests:
          cpu: 10m
          memory: 25Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log/containers
        name: varlibcontainers
        readOnly: true
      - mountPath: /fluent-bit/config
        name: config
        readOnly: true
      - mountPath: /var/log/
        name: varlogs
        readOnly: true
      - mountPath: /var/log/journal
        name: systemd
        readOnly: true
      - mountPath: /fluent-bit/tail
        name: positions
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5v8tk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: fluent-bit
    serviceAccountName: fluent-bit
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log/containers
        type: ""
      name: varlibcontainers
    - name: config
      secret:
        defaultMode: 420
        secretName: fluent-bit-config
    - hostPath:
        path: /var/log
        type: ""
      name: varlogs
    - hostPath:
        path: /var/log/journal
        type: ""
      name: systemd
    - emptyDir: {}
      name: positions
    - name: kube-api-access-5v8tk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ec46e6a5dced8f69fa7fa30bb84a035e82c9c230586c85776f66a385279c0e31
      image: docker.io/kubesphere/fluent-bit:v1.9.4
      imageID: docker.io/kubesphere/fluent-bit@sha256:c14d673ad2c51b5441075f8811ec3d899a3abfce3950fe26ea0e51628199af65
      lastState: {}
      name: fluent-bit
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:45:31Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.236
    podIPs:
    - ip: 192.168.5.236
    qosClass: Burstable
    startTime: "2025-06-23T16:45:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-23T16:45:28Z"
    generateName: fluentbit-operator-c9568f955-
    labels:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: fluentbit-operator
      pod-template-hash: c9568f955
    name: fluentbit-operator-c9568f955-fx5k4
    namespace: kubesphere-logging-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: fluentbit-operator-c9568f955
      uid: 307db8cf-cfbd-46de-9201-fd73e7adda4f
    resourceVersion: "72245152"
    uid: 3f8c8b63-06b3-433a-ad39-d5669b314173
  spec:
    affinity: {}
    containers:
    - image: kubesphere/fluentbit-operator:v0.14.0
      imagePullPolicy: IfNotPresent
      name: fluentbit-operator
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /fluentbit-operator
        name: env
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tffml
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - set -ex; echo CONTAINER_ROOT_DIR=/var/log > /fluentbit-operator/fluent-bit.env
      image: docker:19.03
      imagePullPolicy: IfNotPresent
      name: setenv
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /fluentbit-operator
        name: env
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tffml
        readOnly: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: fluentbit-operator
    serviceAccountName: fluentbit-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: env
    - name: kube-api-access-tffml
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bf6a28a72724f2503cf3d0c45a1616b9973885f65089acdc3c51ea5edb5732d7
      image: docker.io/kubesphere/fluentbit-operator:v0.14.0
      imageID: docker.io/kubesphere/fluentbit-operator@sha256:d1fb91e01c8e0720d2f52f3c9fb520536d14a258a1d448d4e58d7c93be8c3e36
      lastState: {}
      name: fluentbit-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:45:57Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    initContainerStatuses:
    - containerID: containerd://a5f6c340af71cb5cc23299e99ee0963fe973b01cf1ea808b37003c2dd4205e4f
      image: docker.io/library/docker:19.03
      imageID: docker.io/library/docker@sha256:ea1f0761c92b600417ad14bc9b2b3a30abf8e96e94895fee6cbb5353316f30b0
      lastState: {}
      name: setenv
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a5f6c340af71cb5cc23299e99ee0963fe973b01cf1ea808b37003c2dd4205e4f
          exitCode: 0
          finishedAt: "2025-06-23T16:45:35Z"
          reason: Completed
          startedAt: "2025-06-23T16:45:35Z"
    phase: Running
    podIP: 192.168.5.233
    podIPs:
    - ip: 192.168.5.233
    qosClass: Burstable
    startTime: "2025-06-23T16:45:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-23T16:45:28Z"
    generateName: kube-auditing-operator-67bf65bdcf-
    labels:
      name: kube-auditing-operator
      pod-template-hash: 67bf65bdcf
    name: kube-auditing-operator-67bf65bdcf-f2nhs
    namespace: kubesphere-logging-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-auditing-operator-67bf65bdcf
      uid: b7b55263-cd19-4084-a0ab-43594b2c8864
    resourceVersion: "72245048"
    uid: 8279a718-4ab2-45fc-8170-4f416132391f
  spec:
    affinity: {}
    containers:
    - command:
      - kube-auditing-operator
      env:
      - name: WATCH_NAMESPACE
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: OPERATOR_NAME
        value: kube-auditing-operator
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: kubesphere/kube-auditing-operator:v0.2.0
      imagePullPolicy: IfNotPresent
      name: kube-auditing-operator
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 20m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/localtime
        name: host-time
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dbppb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-auditing-operator
    serviceAccountName: kube-auditing-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /etc/localtime
        type: ""
      name: host-time
    - name: kube-api-access-dbppb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:49Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6d1e80cd6b5469bde55f5a73d0e9cf806c7eba5a2b7a7b46679664cdf1155244
      image: docker.io/kubesphere/kube-auditing-operator:v0.2.0
      imageID: docker.io/kubesphere/kube-auditing-operator@sha256:f74c90466667ba7cec56cdf5a96a305ea67d697ad2255e8d9a3b042960276886
      lastState: {}
      name: kube-auditing-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:45:48Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.234
    podIPs:
    - ip: 192.168.5.234
    qosClass: Burstable
    startTime: "2025-06-23T16:45:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-23T16:45:28Z"
    generateName: kube-auditing-webhook-deploy-5dc6f88977-
    labels:
      app: kube-auditing-webhook
      pod-template-hash: 5dc6f88977
    name: kube-auditing-webhook-deploy-5dc6f88977-6mf7d
    namespace: kubesphere-logging-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-auditing-webhook-deploy-5dc6f88977
      uid: 4d736ea8-0ec0-4db9-b9b5-81d55087b908
    resourceVersion: "72245033"
    uid: beafe8e9-770a-476d-b8eb-16dfdd0eccdb
  spec:
    affinity: {}
    containers:
    - args:
      - --port=6443
      - --tls=true
      command:
      - kube-auditing-webhook
      - --auditing-webhook-name=kube-auditing-webhook
      image: kubesphere/kube-auditing-webhook:v0.2.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          httpGet:
            path: /preStop
            port: 6443
            scheme: HTTPS
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: kube-auditing-webhook
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 20m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kube/auditing/
        name: cert
        readOnly: true
      - mountPath: /etc/localtime
        name: host-time
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-csnhv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-auditing-operator
    serviceAccountName: kube-auditing-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: kube-auditing-webhook-secret
    - hostPath:
        path: /etc/localtime
        type: ""
      name: host-time
    - name: kube-api-access-csnhv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:30Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c4179739e9e14960678715e73cb02b7ef73381514d5827ae196af33521e979cd
      image: docker.io/kubesphere/kube-auditing-webhook:v0.2.0
      imageID: docker.io/kubesphere/kube-auditing-webhook@sha256:4bf0967e21481691b1261b2d24856e5b349dc28e6392f1328c5edde26fda68b9
      lastState: {}
      name: kube-auditing-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:45:29Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.235
    podIPs:
    - ip: 192.168.5.235
    qosClass: Burstable
    startTime: "2025-06-23T16:45:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      configchecksum: 7ae9ee8976556684117227f195eef403383946c42d4a80240e54080c8fb0393
      kubectl.kubernetes.io/restartedAt: "2025-04-25T13:01:16+05:30"
    creationTimestamp: "2025-06-23T16:45:29Z"
    generateName: opensearch-cluster-data-
    labels:
      app.kubernetes.io/component: opensearch-cluster-data
      app.kubernetes.io/instance: opensearch-data
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/version: 2.6.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: opensearch-cluster-data-8b8964d67
      helm.sh/chart: opensearch-2.11.0
      statefulset.kubernetes.io/pod-name: opensearch-cluster-data-0
    name: opensearch-cluster-data-0
    namespace: kubesphere-logging-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: opensearch-cluster-data
      uid: d43daa48-f995-4b6c-bf07-413d72c8f3ba
    resourceVersion: "72247596"
    uid: 635ccafb-c790-4cf2-a89b-511b9dfca8d8
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - opensearch-data
              - key: app.kubernetes.io/name
                operator: In
                values:
                - opensearch
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: node.name
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: discovery.seed_hosts
        value: opensearch-cluster-master-headless
      - name: cluster.name
        value: opensearch-cluster
      - name: network.host
        value: 0.0.0.0
      - name: OPENSEARCH_JAVA_OPTS
        value: -Xmx1536M -Xms1536M
      - name: node.roles
        value: ingest,data,remote_cluster_client,
      image: opensearchproject/opensearch:2.6.0
      imagePullPolicy: IfNotPresent
      name: opensearch
      ports:
      - containerPort: 9200
        name: http
        protocol: TCP
      - containerPort: 9300
        name: transport
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 9200
        timeoutSeconds: 3
      resources:
        requests:
          cpu: "1"
          memory: 1536Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000
      startupProbe:
        failureThreshold: 30
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 9200
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/opensearch/data
        name: opensearch-cluster-data
      - mountPath: /usr/share/opensearch/config/opensearch.yml
        name: config
        subPath: opensearch.yml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvtrv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: opensearch-cluster-data-0
    initContainers:
    - args:
      - chown -R 1000:1000 /usr/share/opensearch/data
      command:
      - sh
      - -c
      image: busybox:latest
      imagePullPolicy: Always
      name: fsgroup-volume
      resources: {}
      securityContext:
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/opensearch/data
        name: opensearch-cluster-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mvtrv
        readOnly: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount: default
    serviceAccountName: default
    subdomain: opensearch-cluster-data-headless
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: opensearch-cluster-data
      persistentVolumeClaim:
        claimName: opensearch-cluster-data-opensearch-cluster-data-0
    - configMap:
        defaultMode: 420
        name: opensearch-cluster-data-config
      name: config
    - name: kube-api-access-mvtrv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:46:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:50:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:50:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://43cf764b06b16c8caea085cddcf55929330b999702c61a51413021657d982d09
      image: docker.io/opensearchproject/opensearch:2.6.0
      imageID: docker.io/opensearchproject/opensearch@sha256:40f5bb40a543f7ea6458bc0ecffc7679c9df6f8836a9e3781a78829d587ef552
      lastState:
        terminated:
          containerID: containerd://70cf983da15ddeb77515f78ea63db9ee864b1275396d16bde2686e457eeff16e
          exitCode: 78
          finishedAt: "2025-06-23T16:48:32Z"
          reason: Error
          startedAt: "2025-06-23T16:48:23Z"
      name: opensearch
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:50:00Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    initContainerStatuses:
    - containerID: containerd://845312382ae6ad03f49d2310bade3495923860133cbc61d1e61e9f53ef3ae9cb
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:f85340bf132ae937d2c2a763b8335c9bab35d6e8293f70f606b9c6178d84f42b
      lastState: {}
      name: fsgroup-volume
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://845312382ae6ad03f49d2310bade3495923860133cbc61d1e61e9f53ef3ae9cb
          exitCode: 0
          finishedAt: "2025-06-23T16:45:59Z"
          reason: Completed
          startedAt: "2025-06-23T16:45:59Z"
    phase: Running
    podIP: 192.168.5.237
    podIPs:
    - ip: 192.168.5.237
    qosClass: Burstable
    startTime: "2025-06-23T16:45:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      configchecksum: eb70eea659188d444ae38c6d48b6cce2f1c6bd3d9a4b073c07f3839a50e6a01
      kubectl.kubernetes.io/restartedAt: "2025-04-25T13:01:23+05:30"
    creationTimestamp: "2025-06-23T16:45:29Z"
    generateName: opensearch-cluster-master-
    labels:
      app.kubernetes.io/component: opensearch-cluster-master
      app.kubernetes.io/instance: opensearch-master
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/version: 2.6.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: opensearch-cluster-master-856cd98799
      helm.sh/chart: opensearch-2.11.0
      statefulset.kubernetes.io/pod-name: opensearch-cluster-master-0
    name: opensearch-cluster-master-0
    namespace: kubesphere-logging-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: opensearch-cluster-master
      uid: 02876eb4-d790-4e1f-b787-812b274eddf5
    resourceVersion: "72247632"
    uid: c065c248-c891-47d7-aa84-7305d5380d33
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - opensearch-master
              - key: app.kubernetes.io/name
                operator: In
                values:
                - opensearch
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: node.name
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: cluster.initial_master_nodes
        value: opensearch-cluster-master-0,opensearch-cluster-master-1,opensearch-cluster-master-2,
      - name: discovery.seed_hosts
        value: opensearch-cluster-master-headless
      - name: cluster.name
        value: opensearch-cluster
      - name: network.host
        value: 0.0.0.0
      - name: OPENSEARCH_JAVA_OPTS
        value: -Xmx512M -Xms512M
      - name: node.roles
        value: master,
      image: opensearchproject/opensearch:2.6.0
      imagePullPolicy: IfNotPresent
      name: opensearch
      ports:
      - containerPort: 9200
        name: http
        protocol: TCP
      - containerPort: 9300
        name: transport
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 9200
        timeoutSeconds: 3
      resources:
        requests:
          cpu: "1"
          memory: 512Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000
      startupProbe:
        failureThreshold: 30
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 9200
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/opensearch/data
        name: opensearch-cluster-master
      - mountPath: /usr/share/opensearch/config/opensearch.yml
        name: config
        subPath: opensearch.yml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4pv2p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: opensearch-cluster-master-0
    initContainers:
    - args:
      - chown -R 1000:1000 /usr/share/opensearch/data
      command:
      - sh
      - -c
      image: busybox:latest
      imagePullPolicy: Always
      name: fsgroup-volume
      resources: {}
      securityContext:
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/opensearch/data
        name: opensearch-cluster-master
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4pv2p
        readOnly: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsUser: 1000
    serviceAccount: default
    serviceAccountName: default
    subdomain: opensearch-cluster-master-headless
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: opensearch-cluster-master
      persistentVolumeClaim:
        claimName: opensearch-cluster-master-opensearch-cluster-master-0
    - configMap:
        defaultMode: 420
        name: opensearch-cluster-master-config
      name: config
    - name: kube-api-access-4pv2p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:46:01Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:46:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:50:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:50:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:45:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a6ea0ae2275c33efc3d6a36ca7d735b3cfe7c28582d0bc15bc8e004414724bf9
      image: docker.io/opensearchproject/opensearch:2.6.0
      imageID: docker.io/opensearchproject/opensearch@sha256:40f5bb40a543f7ea6458bc0ecffc7679c9df6f8836a9e3781a78829d587ef552
      lastState:
        terminated:
          containerID: containerd://60e036abb2ad13c460c00194be3c0bdcf54bb518ea43e94ffe2b0b8cb31082c8
          exitCode: 78
          finishedAt: "2025-06-23T16:48:26Z"
          reason: Error
          startedAt: "2025-06-23T16:48:18Z"
      name: opensearch
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:49:50Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    initContainerStatuses:
    - containerID: containerd://4008a471eacbbf30a279b0325a29ea527889226a02bfd4e7bbd61dfcb6a288e0
      image: docker.io/library/busybox:latest
      imageID: docker.io/library/busybox@sha256:f85340bf132ae937d2c2a763b8335c9bab35d6e8293f70f606b9c6178d84f42b
      lastState: {}
      name: fsgroup-volume
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4008a471eacbbf30a279b0325a29ea527889226a02bfd4e7bbd61dfcb6a288e0
          exitCode: 0
          finishedAt: "2025-06-23T16:46:00Z"
          reason: Completed
          startedAt: "2025-06-23T16:46:00Z"
    phase: Running
    podIP: 192.168.5.238
    podIPs:
    - ip: 192.168.5.238
    qosClass: Burstable
    startTime: "2025-06-23T16:45:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: alertmanager
    creationTimestamp: "2025-04-16T11:38:11Z"
    generateName: alertmanager-main-
    labels:
      alertmanager: main
      app.kubernetes.io/component: alert-router
      app.kubernetes.io/instance: main
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 0.23.0
      apps.kubernetes.io/pod-index: "2"
      controller-revision-hash: alertmanager-main-f67787f9b
      statefulset.kubernetes.io/pod-name: alertmanager-main-2
    name: alertmanager-main-2
    namespace: kubesphere-monitoring-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: alertmanager-main
      uid: dd53f019-52a1-4dfb-b919-5923acf95cb8
    resourceVersion: "72238386"
    uid: feb7679e-c0b5-4589-a2e0-655776177f04
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: alertmanager
                operator: In
                values:
                - main
            namespaces:
            - kubesphere-monitoring-system
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --config.file=/etc/alertmanager/config/alertmanager.yaml
      - --storage.path=/alertmanager
      - --data.retention=120h
      - --cluster.listen-address=[$(POD_IP)]:9094
      - --web.listen-address=:9093
      - --web.route-prefix=/
      - --cluster.peer=alertmanager-main-0.alertmanager-operated:9094
      - --cluster.peer=alertmanager-main-1.alertmanager-operated:9094
      - --cluster.peer=alertmanager-main-2.alertmanager-operated:9094
      - --cluster.reconnect-timeout=5m
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: prom/alertmanager:v0.23.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        httpGet:
          path: /-/healthy
          port: web
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      name: alertmanager
      ports:
      - containerPort: 9093
        name: web
        protocol: TCP
      - containerPort: 9094
        name: mesh-tcp
        protocol: TCP
      - containerPort: 9094
        name: mesh-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 20m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/certs
        name: tls-assets
        readOnly: true
      - mountPath: /alertmanager
        name: alertmanager-main-db
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8sgj
        readOnly: true
    - args:
      - --listen-address=:8080
      - --reload-url=http://localhost:9093/-/reload
      - --watched-dir=/etc/alertmanager/config
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: kubesphere/prometheus-config-reloader:v0.55.1
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x8sgj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: alertmanager-main-2
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
    serviceAccount: alertmanager-main
    serviceAccountName: alertmanager-main
    subdomain: alertmanager-operated
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: config-volume
      secret:
        defaultMode: 420
        secretName: alertmanager-main-generated
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: alertmanager-main-tls-assets-0
    - emptyDir: {}
      name: alertmanager-main-db
    - name: kube-api-access-x8sgj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8e197e35b6ed434c83380bfa05f11a0d430851bfb2362a8d295e2b6e65b6ddaa
      image: docker.io/prom/alertmanager:v0.23.0
      imageID: docker.io/prom/alertmanager@sha256:9ab73a421b65b80be072f96a88df756fc5b52a1bc8d983537b8ec5be8b624c5a
      lastState: {}
      name: alertmanager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:11Z"
    - containerID: containerd://b04be828e45c3aa5fedd0b25ab0246217d8a87df6bcd6b3c7de244760a8c529d
      image: docker.io/kubesphere/prometheus-config-reloader:v0.55.1
      imageID: docker.io/kubesphere/prometheus-config-reloader@sha256:77c5a31bd7ac72a4b3ba3a6d3aa8e593eb070bd61384c49e96ad3d4aa0aa185d
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:19Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.204
    podIPs:
    - ip: 192.168.5.204
    qosClass: Burstable
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-10T07:02:11Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 1.3.1
      controller-revision-hash: 7f57ff6bf5
      pod-template-generation: "1"
    name: node-exporter-vks64
    namespace: kubesphere-monitoring-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: 57c8536a-cdea-4fe5-840d-c6f0289d5d7b
    resourceVersion: "70967204"
    uid: b03f74b7-8c0b-4f3e-b83e-549d5194817b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --no-collector.wifi
      - --no-collector.hwmon
      - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+)($|/)
      - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|sysfs|tracefs)$
      image: prom/node-exporter:v1.3.1
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        limits:
          cpu: "1"
          memory: 500Mi
        requests:
          cpu: 102m
          memory: 180Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/proc
        name: proc
        readOnly: true
      - mountPath: /host/sys
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n7wmd
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:9100/
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: kubesphere/kube-rbac-proxy:v0.11.0
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n7wmd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /proc
        type: ""
      name: proc
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - name: kube-api-access-n7wmd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:28:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-10T07:02:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:28:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:28:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-10T07:02:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://829b3a331f245d96d010640693e8272eede02e1da346ccdec6a7aa5906426d8e
      image: docker.io/kubesphere/kube-rbac-proxy:v0.11.0
      imageID: docker.io/kubesphere/kube-rbac-proxy@sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-06-20T20:28:51Z"
    - containerID: containerd://f418c7d4c316147d21c387804c34d4f9f45b2a718e4afae319d84e4b419e77fb
      image: docker.io/prom/node-exporter:v1.3.1
      imageID: docker.io/prom/node-exporter@sha256:f2269e73124dd0f60a7d19a2ce1264d33d08a985aed0ee6b0b89d0be470592cd
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-06-20T20:28:47Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 10.48.219.138
    podIPs:
    - ip: 10.48.219.138
    qosClass: Burstable
    startTime: "2025-02-10T07:02:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:04Z"
    generateName: notification-manager-deployment-c9d789f99-
    labels:
      app: notification-manager
      notification-manager: notification-manager
      pod-template-hash: c9d789f99
    name: notification-manager-deployment-c9d789f99-4pw4l
    namespace: kubesphere-monitoring-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: notification-manager-deployment-c9d789f99
      uid: fceec78a-ae96-4af7-bfb1-a1732e1ad323
    resourceVersion: "72238179"
    uid: 58ddbff9-54ec-4186-a067-a4812ae5f62e
  spec:
    affinity: {}
    containers:
    - env:
      - name: NAMESPACE
        value: kubesphere-monitoring-federated
      image: kubesphere/notification-manager:v2.3.0
      imagePullPolicy: IfNotPresent
      name: notification-manager
      ports:
      - containerPort: 19093
        name: webhook
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 5m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8cht
        readOnly: true
    - image: kubesphere/notification-tenant-sidecar:v3.2.0
      imagePullPolicy: IfNotPresent
      name: tenant
      ports:
      - containerPort: 19094
        name: tenant
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8cht
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: notification-manager-sa
    serviceAccountName: notification-manager-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-p8cht
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9aea600e99c50b93f81ba8dc8aa03aba806b8c7b55aaeb612d26481458ed227e
      image: docker.io/kubesphere/notification-manager:v2.3.0
      imageID: docker.io/kubesphere/notification-manager@sha256:8a208b905cfc4620832d9e4807e6390cfa27b8ec5e8d0ebd0f1a781503b7fc34
      lastState: {}
      name: notification-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:33:52Z"
    - containerID: containerd://d5850ceff4827c1fc686da24877853a98068b116ed76e8b537cd13a8b0dee070
      image: docker.io/kubesphere/notification-tenant-sidecar:v3.2.0
      imageID: docker.io/kubesphere/notification-tenant-sidecar@sha256:32c98dac712c0b08bd1e16dc3fb5a2241d5a0f8580f8f92b2a53c83d0cae2578
      lastState: {}
      name: tenant
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:33:53Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.201
    podIPs:
    - ip: 192.168.5.201
    qosClass: Burstable
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: prometheus
    creationTimestamp: "2025-06-23T16:34:56Z"
    generateName: prometheus-k8s-
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 2.39.1
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: prometheus-k8s-745fccb79c
      operator.prometheus.io/name: k8s
      operator.prometheus.io/shard: "0"
      prometheus: k8s
      statefulset.kubernetes.io/pod-name: prometheus-k8s-0
    name: prometheus-k8s-0
    namespace: kubesphere-monitoring-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-k8s
      uid: 5d38d7dc-8f61-4eb2-81b7-07cb7d961443
    resourceVersion: "72241136"
    uid: 601d7697-6e24-4ba3-a10d-79083ee01871
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: node-role.kubernetes.io/monitoring
              operator: Exists
          weight: 100
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: prometheus
                app.kubernetes.io/instance: k8s
                app.kubernetes.io/name: prometheus
                app.kubernetes.io/part-of: kube-prometheus
            namespaces:
            - kubesphere-monitoring-system
            topologyKey: kubernetes.io/hostname
          weight: 100
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=7d
      - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --query.max-concurrency=1000
      - --web.route-prefix=/
      - --web.config.file=/etc/prometheus/web_config/web-config.yaml
      image: prom/prometheus:v2.39.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /-/healthy
          port: web
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      name: prometheus
      ports:
      - containerPort: 9090
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "4"
          memory: 16Gi
        requests:
          cpu: 200m
          memory: 400Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      startupProbe:
        failureThreshold: 60
        httpGet:
          path: /-/ready
          port: web
          scheme: HTTP
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: tls-assets
        readOnly: true
      - mountPath: /prometheus
        name: prometheus-k8s-db
        subPath: prometheus-db
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7h9dt
        readOnly: true
    - args:
      - --listen-address=:8080
      - --reload-url=http://localhost:9090/-/reload
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: kubesphere/prometheus-config-reloader:v0.55.1
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7h9dt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: prometheus-k8s-0
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: kubesphere/prometheus-config-reloader:v0.55.1
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7h9dt
        readOnly: true
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 0
      runAsNonRoot: false
      runAsUser: 0
    serviceAccount: prometheus-k8s
    serviceAccountName: prometheus-k8s
    subdomain: prometheus-operated
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoSchedule
      key: dedicated
      operator: Equal
      value: monitoring
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: prometheus-k8s-db
      persistentVolumeClaim:
        claimName: prometheus-k8s-db-prometheus-k8s-0
    - name: config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: prometheus-k8s-tls-assets-0
    - emptyDir: {}
      name: config-out
    - configMap:
        defaultMode: 420
        name: prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - name: web-config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-web-config
    - name: kube-api-access-7h9dt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://39f7e4c80604d7e616b2a73decf52b418347dae475abce4d88539e53bffbb1a2
      image: docker.io/kubesphere/prometheus-config-reloader:v0.55.1
      imageID: docker.io/kubesphere/prometheus-config-reloader@sha256:77c5a31bd7ac72a4b3ba3a6d3aa8e593eb070bd61384c49e96ad3d4aa0aa185d
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:39:29Z"
    - containerID: containerd://3b21f1cdfe813f84ae6fbd449eb3b1e73234208ab9caa7fa5f213ff5f44e0d8e
      image: docker.io/prom/prometheus:v2.39.1
      imageID: docker.io/prom/prometheus@sha256:4748e26f9369ee7270a7cd3fb9385c1adb441c05792ce2bce2f6dd622fd91d38
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:39:29Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    initContainerStatuses:
    - containerID: containerd://8ef7da54769e9f1cfc394d8c56acfb58260cf559116836950d005eb5a8fdd24b
      image: docker.io/kubesphere/prometheus-config-reloader:v0.55.1
      imageID: docker.io/kubesphere/prometheus-config-reloader@sha256:77c5a31bd7ac72a4b3ba3a6d3aa8e593eb070bd61384c49e96ad3d4aa0aa185d
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://8ef7da54769e9f1cfc394d8c56acfb58260cf559116836950d005eb5a8fdd24b
          exitCode: 0
          finishedAt: "2025-06-23T16:39:29Z"
          reason: Completed
          startedAt: "2025-06-23T16:39:29Z"
    phase: Running
    podIP: 192.168.5.228
    podIPs:
    - ip: 192.168.5.228
    qosClass: Burstable
    startTime: "2025-06-23T16:39:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: prometheus-operator
    creationTimestamp: "2025-04-16T11:38:05Z"
    generateName: prometheus-operator-7888d46fbd-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: v0.55.1
      pod-template-hash: 7888d46fbd
    name: prometheus-operator-7888d46fbd-bxbr2
    namespace: kubesphere-monitoring-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-operator-7888d46fbd
      uid: 7c2ce707-9dc5-4ef8-b683-d23a233162b6
    resourceVersion: "72238471"
    uid: 164c6c58-96cf-4308-8012-c5ef3456d63f
  spec:
    affinity: {}
    containers:
    - args:
      - --kubelet-service=kube-system/kubelet
      - --prometheus-config-reloader=kubesphere/prometheus-config-reloader:v0.55.1
      image: kubesphere/prometheus-operator:v0.55.1
      imagePullPolicy: IfNotPresent
      name: prometheus-operator
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rdwrb
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      - --upstream=http://127.0.0.1:8080/
      image: kubesphere/kube-rbac-proxy:v0.11.0
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rdwrb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: prometheus-operator
    serviceAccountName: prometheus-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rdwrb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d5f9766121e75c99f762f3138ba02bd23ec96e3a2dd9a508bfcf174c70e5f95a
      image: docker.io/kubesphere/kube-rbac-proxy:v0.11.0
      imageID: docker.io/kubesphere/kube-rbac-proxy@sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:30Z"
    - containerID: containerd://6d3909f76089b084796895e5bf59717820e49642b2fe4d4fdf80db136632300c
      image: docker.io/kubesphere/prometheus-operator:v0.55.1
      imageID: docker.io/kubesphere/prometheus-operator@sha256:4eed7c8a413cdbf865b155591e63322212db44d8b932037a8d08eb7e1964e569
      lastState: {}
      name: prometheus-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:16Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.210
    podIPs:
    - ip: 192.168.5.210
    qosClass: Burstable
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: thanos-ruler
    creationTimestamp: "2025-04-16T11:24:54Z"
    generateName: thanos-ruler-kubesphere-
    labels:
      app.kubernetes.io/component: thanos-ruler
      app.kubernetes.io/instance: kubesphere
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: thanos-ruler
      app.kubernetes.io/part-of: kube-prometheus
      app.kubernetes.io/version: 0.31.0
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: thanos-ruler-kubesphere-7d97bc46ff
      statefulset.kubernetes.io/pod-name: thanos-ruler-kubesphere-1
      thanos-ruler: kubesphere
    name: thanos-ruler-kubesphere-1
    namespace: kubesphere-monitoring-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: thanos-ruler-kubesphere
      uid: 7515b72f-709c-4a9c-822d-fcdbc676e0dc
    resourceVersion: "72238137"
    uid: 387dd8a9-c3a4-440f-bbc3-6ec7170ea500
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/component: thanos-ruler
                app.kubernetes.io/instance: kubesphere
                app.kubernetes.io/name: thanos-ruler
                app.kubernetes.io/part-of: kube-prometheus
            namespaces:
            - kubesphere-monitoring-system
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - rule
      - --data-dir=/thanos/data
      - --eval-interval=1m
      - --tsdb.retention=24h
      - --label=thanos_ruler_replica="$(POD_NAME)"
      - --alert.label-drop=thanos_ruler_replica
      - --query=http://prometheus-operated.kubesphere-monitoring-system.svc:9090
      - --rule-file=/etc/thanos/rules/*/*.yaml
      - --alertmanagers.url=dnssrv+http://alertmanager-operated.kubesphere-monitoring-system.svc:9093
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: thanosio/thanos:v0.31.0
      imagePullPolicy: IfNotPresent
      name: thanos-ruler
      ports:
      - containerPort: 10901
        name: grpc
        protocol: TCP
      - containerPort: 10902
        name: web
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /thanos/data
        name: thanos-ruler-kubesphere-data
      - mountPath: /etc/thanos/rules/thanos-ruler-kubesphere-rulefiles-0
        name: thanos-ruler-kubesphere-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ggpnn
        readOnly: true
    - args:
      - --listen-address=:8080
      - --reload-url=http://localhost:10902/-/reload
      - --watched-dir=/etc/thanos/rules/thanos-ruler-kubesphere-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: kubesphere/prometheus-config-reloader:v0.55.1
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/thanos/rules/thanos-ruler-kubesphere-rulefiles-0
        name: thanos-ruler-kubesphere-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ggpnn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: thanos-ruler-kubesphere-1
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: thanos-ruler-kubesphere-rulefiles-0
      name: thanos-ruler-kubesphere-rulefiles-0
    - emptyDir: {}
      name: thanos-ruler-kubesphere-data
    - name: kube-api-access-ggpnn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9eb356e3dc5c89c6623217013923aaf704e27774ba105ecda5a470be23213805
      image: docker.io/kubesphere/prometheus-config-reloader:v0.55.1
      imageID: docker.io/kubesphere/prometheus-config-reloader@sha256:77c5a31bd7ac72a4b3ba3a6d3aa8e593eb070bd61384c49e96ad3d4aa0aa185d
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:33:49Z"
    - containerID: containerd://fcf0224b6de4c52f7c69358bae5bc8bf19f3b2ad904ab277aef08aa7a0144b9d
      image: docker.io/thanosio/thanos:v0.31.0
      imageID: docker.io/thanosio/thanos@sha256:e7d337d6ac2aea3f0f9314ec9830291789e16e2b480b9d353be02d05ce7f2a7e
      lastState: {}
      name: thanos-ruler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:33:49Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.196
    podIPs:
    - ip: 192.168.5.196
    qosClass: Burstable
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:05Z"
    generateName: csi-attacher-6fcbcb955-
    labels:
      app: csi-attacher
      pod-template-hash: 6fcbcb955
    name: csi-attacher-6fcbcb955-4zq8k
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-attacher-6fcbcb955
      uid: 1df08326-513e-4278-922f-be55fd59ccbb
    resourceVersion: "72238397"
    uid: 2047a867-ec82-4e1b-87cb-f062d4a3d914
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-attacher
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-attacher:v4.8.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      ports:
      - containerPort: 8000
        name: csi-attacher
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s57md
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-s57md
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ce7d2ddc409a0e7f46bf578480bf48ce915202e1bd7b2e286a19e2520de591b6
      image: docker.io/longhornio/csi-attacher:v4.8.0
      imageID: docker.io/longhornio/csi-attacher@sha256:86afa429db9da56ff7b1b53541ff508a0b71ed5dd8c57e392d93f6d4174f1abd
      lastState: {}
      name: csi-attacher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:21Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.219
    podIPs:
    - ip: 192.168.5.219
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:05Z"
    generateName: csi-attacher-6fcbcb955-
    labels:
      app: csi-attacher
      pod-template-hash: 6fcbcb955
    name: csi-attacher-6fcbcb955-l9gxh
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-attacher-6fcbcb955
      uid: 1df08326-513e-4278-922f-be55fd59ccbb
    resourceVersion: "72238508"
    uid: cc5582d1-7fb3-4b22-a137-29ab1add15a2
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-attacher
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-attacher:v4.8.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      ports:
      - containerPort: 8000
        name: csi-attacher
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9c94h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-9c94h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad7f974155170443248aae6594e6ba10e3cedfbd4d037bfb6c8f2cb9d629b4bc
      image: docker.io/longhornio/csi-attacher:v4.8.0
      imageID: docker.io/longhornio/csi-attacher@sha256:86afa429db9da56ff7b1b53541ff508a0b71ed5dd8c57e392d93f6d4174f1abd
      lastState: {}
      name: csi-attacher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:32Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.223
    podIPs:
    - ip: 192.168.5.223
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:40:19Z"
    generateName: csi-attacher-6fcbcb955-
    labels:
      app: csi-attacher
      pod-template-hash: 6fcbcb955
    name: csi-attacher-6fcbcb955-rlz68
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-attacher-6fcbcb955
      uid: 1df08326-513e-4278-922f-be55fd59ccbb
    resourceVersion: "91798998"
    uid: dd2c2804-4a2d-4d39-8aec-e9d87ee6662c
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-attacher
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-attacher:v4.8.0
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      ports:
      - containerPort: 8000
        name: csi-attacher
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xk89t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-xk89t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-31T01:22:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-31T01:22:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://88f7a059d359fd97af2174d4376f01ca0ccc224c363139bebad0463fc83d5f69
      image: docker.io/longhornio/csi-attacher:v4.8.0
      imageID: docker.io/longhornio/csi-attacher@sha256:86afa429db9da56ff7b1b53541ff508a0b71ed5dd8c57e392d93f6d4174f1abd
      lastState:
        terminated:
          containerID: containerd://12471abce3880d6569b01ff2769ac4dd846f075bc071d55e4c2d285c5bdd5b55
          exitCode: 1
          finishedAt: "2025-07-31T01:22:39Z"
          reason: Error
          startedAt: "2025-07-18T00:59:08Z"
      name: csi-attacher
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-31T01:22:40Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.209
    podIPs:
    - ip: 192.168.5.209
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:40:19Z"
    generateName: csi-provisioner-598bb7c5fb-
    labels:
      app: csi-provisioner
      pod-template-hash: 598bb7c5fb
    name: csi-provisioner-598bb7c5fb-26p4d
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-provisioner-598bb7c5fb
      uid: d45d7d6d-03b0-47d1-a23d-0a8273456a7b
    resourceVersion: "85050267"
    uid: a32cf44c-4041-4970-b7df-e7196e7ac796
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-provisioner
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --default-fstype=ext4
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-provisioner:v5.1.0-20241220
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      ports:
      - containerPort: 8000
        name: csi-provisioner
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-drftp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-drftp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:17Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-18T00:59:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-18T00:59:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cb0a9346c70ff0775dcb088994f5d8e9c82f63a0aa41535423dbe4e77d04002b
      image: docker.io/longhornio/csi-provisioner:v5.1.0-20241220
      imageID: docker.io/longhornio/csi-provisioner@sha256:efc6445ad5875a49a69615b46a7edb19e42fefdc73a2abb9dfe7b2fd21efe7ad
      lastState:
        terminated:
          containerID: containerd://b90a9ec388cf7db2251fe6ae9fecd64c6b6bc4c509e0c85d17b928c13e8104a4
          exitCode: 1
          finishedAt: "2025-07-18T00:59:07Z"
          reason: Error
          startedAt: "2025-06-23T16:34:17Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-18T00:59:08Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.217
    podIPs:
    - ip: 192.168.5.217
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:05Z"
    generateName: csi-provisioner-598bb7c5fb-
    labels:
      app: csi-provisioner
      pod-template-hash: 598bb7c5fb
    name: csi-provisioner-598bb7c5fb-gdt7h
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-provisioner-598bb7c5fb
      uid: d45d7d6d-03b0-47d1-a23d-0a8273456a7b
    resourceVersion: "72238320"
    uid: f1caa660-878a-4acf-97eb-b05b7c09e257
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-provisioner
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --default-fstype=ext4
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-provisioner:v5.1.0-20241220
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      ports:
      - containerPort: 8000
        name: csi-provisioner
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n9r8n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-n9r8n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://79c86aa5942b185da3994b7385395d60597d42df85d8f5faf5c23956acf47878
      image: docker.io/longhornio/csi-provisioner:v5.1.0-20241220
      imageID: docker.io/longhornio/csi-provisioner@sha256:efc6445ad5875a49a69615b46a7edb19e42fefdc73a2abb9dfe7b2fd21efe7ad
      lastState: {}
      name: csi-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:16Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.207
    podIPs:
    - ip: 192.168.5.207
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:40:19Z"
    generateName: csi-provisioner-598bb7c5fb-
    labels:
      app: csi-provisioner
      pod-template-hash: 598bb7c5fb
    name: csi-provisioner-598bb7c5fb-smgn8
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-provisioner-598bb7c5fb
      uid: d45d7d6d-03b0-47d1-a23d-0a8273456a7b
    resourceVersion: "72238728"
    uid: a91e9ae9-01d3-4232-b3e9-3ee79af363bb
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-provisioner
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --default-fstype=ext4
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-provisioner:v5.1.0-20241220
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      ports:
      - containerPort: 8000
        name: csi-provisioner
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n75k8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-n75k8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a8a43a31292d3d9ec9c07723d65e887a9f3d693500166b51c5ddeb9110cc37e4
      image: docker.io/longhornio/csi-provisioner:v5.1.0-20241220
      imageID: docker.io/longhornio/csi-provisioner@sha256:efc6445ad5875a49a69615b46a7edb19e42fefdc73a2abb9dfe7b2fd21efe7ad
      lastState:
        terminated:
          containerID: containerd://06a58b239232ddb1b280a61f4833a914ed580cf3c13c55b1e7a0e6329d6c3ed7
          exitCode: 1
          finishedAt: "2025-06-23T16:34:42Z"
          reason: Error
          startedAt: "2025-06-23T16:33:52Z"
      name: csi-provisioner
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:48Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.197
    podIPs:
    - ip: 192.168.5.197
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:05Z"
    generateName: csi-resizer-68d958d4b6-
    labels:
      app: csi-resizer
      pod-template-hash: 68d958d4b6
    name: csi-resizer-68d958d4b6-k9mcj
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-resizer-68d958d4b6
      uid: 460cd007-cae1-4712-afdb-4315cbd92e40
    resourceVersion: "72238625"
    uid: 278df4db-7988-4475-a797-30f55ec428c9
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-resizer
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      - --handle-volume-inuse-error=false
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-resizer:v1.13.1
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      ports:
      - containerPort: 8000
        name: csi-resizer
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cdg75
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-cdg75
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:49Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5134a5915cac782c0b3e07567697b25bc3496190c701f037b983191435369745
      image: docker.io/longhornio/csi-resizer:v1.13.1
      imageID: docker.io/longhornio/csi-resizer@sha256:94763536d2c408efb2a43d3e1c5a56ed1e38dd2c1b63659ff2418c0602651d37
      lastState:
        terminated:
          containerID: containerd://355da4880dfa324486658d190b9d71c3c7c5f9b93954eee365feaf1c904f1fe5
          exitCode: 1
          finishedAt: "2025-06-23T16:34:20Z"
          reason: Error
          startedAt: "2025-06-23T16:33:48Z"
      name: csi-resizer
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:44Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.194
    podIPs:
    - ip: 192.168.5.194
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:40:19Z"
    generateName: csi-resizer-68d958d4b6-
    labels:
      app: csi-resizer
      pod-template-hash: 68d958d4b6
    name: csi-resizer-68d958d4b6-ncw8g
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-resizer-68d958d4b6
      uid: 460cd007-cae1-4712-afdb-4315cbd92e40
    resourceVersion: "72238677"
    uid: 49a76b46-bd37-418c-9ed3-a1dc70e0cae5
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-resizer
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      - --handle-volume-inuse-error=false
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-resizer:v1.13.1
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      ports:
      - containerPort: 8000
        name: csi-resizer
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cdg97
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-cdg97
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c553650d7fdb904bb493e9759cef45459154334be51a1f484625e89c968a1004
      image: docker.io/longhornio/csi-resizer:v1.13.1
      imageID: docker.io/longhornio/csi-resizer@sha256:94763536d2c408efb2a43d3e1c5a56ed1e38dd2c1b63659ff2418c0602651d37
      lastState:
        terminated:
          containerID: containerd://f0332a1636e87efaf5b77c4a57d1ad26df9bb327c0be661d0acffa43c7c31cb6
          exitCode: 1
          finishedAt: "2025-06-23T16:34:22Z"
          reason: Error
          startedAt: "2025-06-23T16:33:52Z"
      name: csi-resizer
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:47Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.199
    podIPs:
    - ip: 192.168.5.199
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:05Z"
    generateName: csi-resizer-68d958d4b6-
    labels:
      app: csi-resizer
      pod-template-hash: 68d958d4b6
    name: csi-resizer-68d958d4b6-vn9vp
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-resizer-68d958d4b6
      uid: 460cd007-cae1-4712-afdb-4315cbd92e40
    resourceVersion: "72238623"
    uid: 64d33279-a427-4c08-8496-07f967f17743
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-resizer
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      - --handle-volume-inuse-error=false
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-resizer:v1.13.1
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      ports:
      - containerPort: 8000
        name: csi-resizer
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-thh95
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-thh95
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:49Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://19c00c517fd78547125a934271b2d871006364ebadeb4b57101a3b58a1fde2e1
      image: docker.io/longhornio/csi-resizer:v1.13.1
      imageID: docker.io/longhornio/csi-resizer@sha256:94763536d2c408efb2a43d3e1c5a56ed1e38dd2c1b63659ff2418c0602651d37
      lastState:
        terminated:
          containerID: containerd://0b768572ad8a96b199f9d524935eab28dda18da9c60626754e528bce53794196
          exitCode: 1
          finishedAt: "2025-06-23T16:34:20Z"
          reason: Error
          startedAt: "2025-06-23T16:33:48Z"
      name: csi-resizer
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:44Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.195
    podIPs:
    - ip: 192.168.5.195
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:06Z"
    generateName: csi-snapshotter-6b4f685f7d-
    labels:
      app: csi-snapshotter
      pod-template-hash: 6b4f685f7d
    name: csi-snapshotter-6b4f685f7d-jsdpb
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-snapshotter-6b4f685f7d
      uid: 9b565cb1-ff22-42a4-8df5-b106a0ee85bb
    resourceVersion: "72238381"
    uid: a736e71d-4a7b-4c50-8753-1877f9db9f0b
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-snapshotter
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-snapshotter:v8.2.0
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      ports:
      - containerPort: 8000
        name: csi-snapshotter
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-crhbz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-crhbz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8d76c7ba5d276e53a67f88fe237172c6ab68b9251a56ca1572af1253e5e06943
      image: docker.io/longhornio/csi-snapshotter:v8.2.0
      imageID: docker.io/longhornio/csi-snapshotter@sha256:dff0c369ad0dbea80f9c657ae817122c036d2775e3c98c2c62ab6138d2a9d6ec
      lastState: {}
      name: csi-snapshotter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:19Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.213
    podIPs:
    - ip: 192.168.5.213
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:06Z"
    generateName: csi-snapshotter-6b4f685f7d-
    labels:
      app: csi-snapshotter
      pod-template-hash: 6b4f685f7d
    name: csi-snapshotter-6b4f685f7d-msg9d
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-snapshotter-6b4f685f7d
      uid: 9b565cb1-ff22-42a4-8df5-b106a0ee85bb
    resourceVersion: "110690731"
    uid: 3ba31236-a077-4443-84e7-faf74b9d26ad
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-snapshotter
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-snapshotter:v8.2.0
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      ports:
      - containerPort: 8000
        name: csi-snapshotter
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxcjq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-fxcjq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T01:22:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-08T01:22:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://2c6f46fac87f71d742cda53679784561de2714cb7be5d579c760ff0e543b57d2
      image: docker.io/longhornio/csi-snapshotter:v8.2.0
      imageID: docker.io/longhornio/csi-snapshotter@sha256:dff0c369ad0dbea80f9c657ae817122c036d2775e3c98c2c62ab6138d2a9d6ec
      lastState:
        terminated:
          containerID: containerd://296d23b04b4f0c731935466d575d10bb14455ced6d0b38dc09b3e75a6a3fed11
          exitCode: 1
          finishedAt: "2025-09-08T01:22:35Z"
          reason: Error
          startedAt: "2025-07-31T01:22:40Z"
      name: csi-snapshotter
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-09-08T01:22:35Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.211
    podIPs:
    - ip: 192.168.5.211
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:40:20Z"
    generateName: csi-snapshotter-6b4f685f7d-
    labels:
      app: csi-snapshotter
      pod-template-hash: 6b4f685f7d
    name: csi-snapshotter-6b4f685f7d-qp5n8
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-snapshotter-6b4f685f7d
      uid: 9b565cb1-ff22-42a4-8df5-b106a0ee85bb
    resourceVersion: "72238333"
    uid: 5b0ce153-6042-42e3-9c96-3a8aaddc8389
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-snapshotter
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --kube-api-qps=50
      - --kube-api-burst=100
      - --http-endpoint=:8000
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-snapshotter:v8.2.0
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      ports:
      - containerPort: 8000
        name: csi-snapshotter
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7xnm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-t7xnm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://64c14aac3e27e972eb17bd76f58c1165bc919256087b745ed733ad023570c1b9
      image: docker.io/longhornio/csi-snapshotter:v8.2.0
      imageID: docker.io/longhornio/csi-snapshotter@sha256:dff0c369ad0dbea80f9c657ae817122c036d2775e3c98c2c62ab6138d2a9d6ec
      lastState: {}
      name: csi-snapshotter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:16Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.206
    podIPs:
    - ip: 192.168.5.206
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-07T11:54:08Z"
    generateName: engine-image-ei-c2d50bcc-
    labels:
      controller-revision-hash: 7756674b54
      longhorn.io/component: engine-image
      longhorn.io/engine-image: ei-c2d50bcc
      pod-template-generation: "1"
    name: engine-image-ei-c2d50bcc-2w74z
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: engine-image-ei-c2d50bcc
      uid: 4b34fb1e-37b9-41e6-9118-22d87258c47d
    resourceVersion: "72238536"
    uid: c8143adc-9e3b-4620-a73d-3a1fd892f287
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - args:
      - -c
      - diff /usr/local/bin/longhorn /data/longhorn > /dev/null 2>&1; if [ $? -ne
        0 ]; then cp -p /usr/local/bin/longhorn /data/ && echo installed; fi && trap
        'rm /data/longhorn* && echo cleaned up' EXIT && sleep infinity
      command:
      - /bin/bash
      image: longhornio/longhorn-engine:v1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: engine-image-ei-c2d50bcc
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - ls /data/longhorn && /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zgmn4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.8.0
        type: ""
      name: data
    - name: kube-api-access-zgmn4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T11:54:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T11:54:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://282bec591d899c531b62042a8cc27733e6993bd92f8c5de07c3a1e3c1b51828a
      image: docker.io/longhornio/longhorn-engine:v1.8.0
      imageID: docker.io/longhornio/longhorn-engine@sha256:e4d94d4026c3508d3c68b46e7c82c41c76cf3ec533a8430f6144170a555b8965
      lastState: {}
      name: engine-image-ei-c2d50bcc
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:22Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.214
    podIPs:
    - ip: 192.168.5.214
    qosClass: BestEffort
    startTime: "2025-02-07T11:54:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      longhorn.io/last-applied-tolerations: '[]'
    creationTimestamp: "2025-06-23T16:39:19Z"
    labels:
      longhorn.io/component: instance-manager
      longhorn.io/data-engine: v1
      longhorn.io/instance-manager-image: imi-46d35c0a
      longhorn.io/instance-manager-type: aio
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: zee8608workerapi01
    name: instance-manager-0d91d974e534c34183045b1d57ce4ece
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: InstanceManager
      name: instance-manager-0d91d974e534c34183045b1d57ce4ece
      uid: a73211d6-12dc-4ebf-aab1-2e4cb23d49fc
    resourceVersion: "72240656"
    uid: dc4474fe-1685-4e6e-8c3f-31bbe1f507df
  spec:
    containers:
    - args:
      - instance-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8500
      env:
      - name: TLS_DIR
        value: /tls-files/
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/longhorn-instance-manager:v1.8.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - test $(nc -zv localhost 8500 > /dev/null 2>&1 && nc -zv localhost 8501
            > /dev/null 2>&1 && nc -zv localhost 8502 > /dev/null 2>&1 && nc -zv localhost
            8503 > /dev/null 2>&1; echo $?) -eq 0
        failureThreshold: 6
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: instance-manager
      resources:
        requests:
          cpu: 1440m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /engine-binaries/
        mountPropagation: HostToContainer
        name: engine-binaries
      - mountPath: /host/var/lib/longhorn/unix-domain-socket/
        name: unix-domain-socket
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4sqlt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/
        type: ""
      name: engine-binaries
    - hostPath:
        path: /var/lib/longhorn/unix-domain-socket/
        type: ""
      name: unix-domain-socket
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-4sqlt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:39:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae0067d0664493ce43954907d282010c537647206857bb9552d478b844d147e6
      image: docker.io/longhornio/longhorn-instance-manager:v1.8.0
      imageID: docker.io/longhornio/longhorn-instance-manager@sha256:411804ef7be19d4b303728dcbef0462e88f813233b932f2a89b6d1942dcace76
      lastState: {}
      name: instance-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:39:19Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.224
    podIPs:
    - ip: 192.168.5.224
    qosClass: Burstable
    startTime: "2025-06-23T16:39:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-02-09T01:36:23+05:30"
    creationTimestamp: "2025-02-08T20:06:30Z"
    generateName: longhorn-csi-plugin-
    labels:
      app: longhorn-csi-plugin
      controller-revision-hash: 5bf48968d4
      pod-template-generation: "2"
    name: longhorn-csi-plugin-tswqt
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-csi-plugin
      uid: 4878d8bb-13dd-4fba-867a-338d2fb13af6
    resourceVersion: "72238701"
    uid: 21304aff-93c1-408a-a806-b886390c90b6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=/var/lib/kubelet/plugins/driver.longhorn.io/csi.sock
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      image: longhornio/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -rf /registration/driver.longhorn.io /registration/driver.longhorn.io-reg.sock
              /csi//*
      name: node-driver-registrar
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7426
        readOnly: true
    - args:
      - --v=4
      - --csi-address=/csi/csi.sock
      image: longhornio/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: longhorn-liveness-probe
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7426
        readOnly: true
    - args:
      - longhorn-manager
      - -d
      - csi
      - --nodeid=$(NODE_ID)
      - --endpoint=$(CSI_ENDPOINT)
      - --drivername=driver.longhorn.io
      - --manager-url=http://longhorn-backend:9500/v1
      env:
      - name: NODE_ID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/longhorn-manager:v1.8.0
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -f /csi//*
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9808
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: longhorn-csi-plugin
      ports:
      - containerPort: 9808
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
        mountPropagation: Bidirectional
        name: kubernetes-csi-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: host-dev
      - mountPath: /host/proc
        name: host-proc
      - mountPath: /sys
        name: host-sys
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r7426
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/kubernetes.io/csi
        type: DirectoryOrCreate
      name: kubernetes-csi-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: pods-mount-dir
    - hostPath:
        path: /dev
        type: ""
      name: host-dev
    - hostPath:
        path: /proc
        type: ""
      name: host-proc
    - hostPath:
        path: /sys
        type: ""
      name: host-sys
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-r7426
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-08T20:06:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-08T20:06:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://354fd65195a43e64d15ba7ece226749ef4e152b5aff3584a3f2536931a9617b3
      image: docker.io/longhornio/longhorn-manager:v1.8.0
      imageID: docker.io/longhornio/longhorn-manager@sha256:3b8289b3e3bce156665748c3faa89b75a3f68b6bead377d708be544a70ed3b20
      lastState:
        terminated:
          containerID: containerd://d1d6f6fcdbcad28a8a622c8b26d5471c6d290b11977d14058070e7d64eb77276
          exitCode: 2
          finishedAt: "2025-06-23T16:34:17Z"
          reason: Error
          startedAt: "2025-06-23T16:34:02Z"
      name: longhorn-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:41Z"
    - containerID: containerd://d5156ca7b5173109d8ae3736e276e7f63543cb02d9f683a4acedb1c0b27a1b74
      image: docker.io/longhornio/livenessprobe:v2.15.0
      imageID: docker.io/longhornio/livenessprobe@sha256:8ced2d04e57e44cfba0b9901e984d8f063c72133a1fde3eb607cc634cd2c8244
      lastState: {}
      name: longhorn-liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:33:55Z"
    - containerID: containerd://2e5b102e7604ac8d4339a023289cf7170c6f7b9704ce0831341e463b18f0d3e5
      image: docker.io/longhornio/csi-node-driver-registrar:v2.13.0
      imageID: docker.io/longhornio/csi-node-driver-registrar@sha256:69cd0517dcd5ca916ad9c8297d3d5370df93c84619cec3d977e8770edf70874f
      lastState:
        terminated:
          containerID: containerd://3fefdbf4423d56151ead6da112a9af4d2102af21e975f1028e46a1b95d1268a1
          exitCode: 1
          finishedAt: "2025-06-23T16:34:32Z"
          reason: Error
          startedAt: "2025-06-23T16:33:52Z"
      name: node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:48Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.200
    podIPs:
    - ip: 192.168.5.200
    qosClass: BestEffort
    startTime: "2025-02-08T20:06:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:06Z"
    generateName: longhorn-driver-deployer-86695f796b-
    labels:
      app: longhorn-driver-deployer
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.8.0
      helm.sh/chart: longhorn-1.8.0
      pod-template-hash: 86695f796b
    name: longhorn-driver-deployer-86695f796b-gfpf5
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: longhorn-driver-deployer-86695f796b
      uid: e100fb6e-2e3b-4f1a-850d-72c64cf827c5
    resourceVersion: "72238331"
    uid: 7559a203-002e-498f-ac65-684cc6fcf707
  spec:
    containers:
    - command:
      - longhorn-manager
      - -d
      - deploy-driver
      - --manager-image
      - longhornio/longhorn-manager:v1.8.0
      - --manager-url
      - http://longhorn-backend:9500/v1
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: CSI_ATTACHER_IMAGE
        value: longhornio/csi-attacher:v4.8.0
      - name: CSI_PROVISIONER_IMAGE
        value: longhornio/csi-provisioner:v5.1.0-20241220
      - name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
        value: longhornio/csi-node-driver-registrar:v2.13.0
      - name: CSI_RESIZER_IMAGE
        value: longhornio/csi-resizer:v1.13.1
      - name: CSI_SNAPSHOTTER_IMAGE
        value: longhornio/csi-snapshotter:v8.2.0
      - name: CSI_LIVENESS_PROBE_IMAGE
        value: longhornio/livenessprobe:v2.15.0
      image: longhornio/longhorn-manager:v1.8.0
      imagePullPolicy: IfNotPresent
      name: longhorn-driver-deployer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-59rxb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1)
        != "200" ]; do echo waiting; sleep 2; done
      image: longhornio/longhorn-manager:v1.8.0
      imagePullPolicy: IfNotPresent
      name: wait-longhorn-manager
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-59rxb
        readOnly: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-59rxb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:33:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:46:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7b0f8e404ea2760b2e3fd4ba2248cd1fe9d165439d4de66782985ec3a386136c
      image: docker.io/longhornio/longhorn-manager:v1.8.0
      imageID: docker.io/longhornio/longhorn-manager@sha256:3b8289b3e3bce156665748c3faa89b75a3f68b6bead377d708be544a70ed3b20
      lastState: {}
      name: longhorn-driver-deployer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:16Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    initContainerStatuses:
    - containerID: containerd://63d1e5ea726208cf4b4094afbd9dc281d3b39ef1f68d13da34cb18deee292876
      image: docker.io/longhornio/longhorn-manager:v1.8.0
      imageID: docker.io/longhornio/longhorn-manager@sha256:3b8289b3e3bce156665748c3faa89b75a3f68b6bead377d708be544a70ed3b20
      lastState: {}
      name: wait-longhorn-manager
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://63d1e5ea726208cf4b4094afbd9dc281d3b39ef1f68d13da34cb18deee292876
          exitCode: 0
          finishedAt: "2025-06-23T16:34:01Z"
          reason: Completed
          startedAt: "2025-06-23T16:33:52Z"
    phase: Running
    podIP: 192.168.5.198
    podIPs:
    - ip: 192.168.5.198
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-02-07T11:53:40Z"
    generateName: longhorn-manager-
    labels:
      app: longhorn-manager
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.8.0
      controller-revision-hash: 899d7b89b
      helm.sh/chart: longhorn-1.8.0
      longhorn.io/admission-webhook: longhorn-admission-webhook
      longhorn.io/conversion-webhook: longhorn-conversion-webhook
      longhorn.io/recovery-backend: longhorn-recovery-backend
      pod-template-generation: "1"
    name: longhorn-manager-pr755
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-manager
      uid: 2db311a3-e5d4-4c19-b150-443eb97a1655
    resourceVersion: "72238664"
    uid: e07bd6d5-e606-4661-a9ab-51c57be792f3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - command:
      - longhorn-manager
      - -d
      - daemon
      - --engine-image
      - longhornio/longhorn-engine:v1.8.0
      - --instance-manager-image
      - longhornio/longhorn-instance-manager:v1.8.0
      - --share-manager-image
      - longhornio/longhorn-share-manager:v1.8.0
      - --backing-image-manager-image
      - longhornio/backing-image-manager:v1.8.0
      - --support-bundle-manager-image
      - longhornio/support-bundle-kit:v0.0.49
      - --manager-image
      - longhornio/longhorn-manager:v1.8.0
      - --service-account
      - longhorn-service-account
      - --upgrade-version-check
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: longhornio/longhorn-manager:v1.8.0
      imagePullPolicy: IfNotPresent
      name: longhorn-manager
      ports:
      - containerPort: 9500
        name: manager
        protocol: TCP
      - containerPort: 9501
        name: conversion-wh
        protocol: TCP
      - containerPort: 9502
        name: admission-wh
        protocol: TCP
      - containerPort: 9503
        name: recov-backend
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v1/healthz
          port: 9501
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/boot/
        name: boot
        readOnly: true
      - mountPath: /host/dev/
        name: dev
      - mountPath: /host/proc/
        name: proc
        readOnly: true
      - mountPath: /host/etc/
        name: etc
        readOnly: true
      - mountPath: /var/lib/longhorn/
        mountPropagation: Bidirectional
        name: longhorn
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2k47g
        readOnly: true
    - command:
      - sh
      - -c
      - echo share-manager image pulled && sleep infinity
      image: longhornio/longhorn-share-manager:v1.8.0
      imagePullPolicy: IfNotPresent
      name: pre-pull-share-manager-image
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2k47g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /boot/
        type: ""
      name: boot
    - hostPath:
        path: /dev/
        type: ""
      name: dev
    - hostPath:
        path: /proc/
        type: ""
      name: proc
    - hostPath:
        path: /etc/
        type: ""
      name: etc
    - hostPath:
        path: /var/lib/longhorn/
        type: ""
      name: longhorn
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-2k47g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T11:53:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T11:53:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ae44b28f584b14c6fc2cf458457d9fa0ecd9331e6c4cba60715329b404aa7e0a
      image: docker.io/longhornio/longhorn-manager:v1.8.0
      imageID: docker.io/longhornio/longhorn-manager@sha256:3b8289b3e3bce156665748c3faa89b75a3f68b6bead377d708be544a70ed3b20
      lastState: {}
      name: longhorn-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:23Z"
    - containerID: containerd://1334479ac49557bf396b323a9fa941765c845a0999c3b8ff35cfe9f86762298f
      image: docker.io/longhornio/longhorn-share-manager:v1.8.0
      imageID: docker.io/longhornio/longhorn-share-manager@sha256:92c05080cb1589060b6c5c58f8012022b9a792aac6e548d122d2986dc84e53be
      lastState: {}
      name: pre-pull-share-manager-image
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:46Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.221
    podIPs:
    - ip: 192.168.5.221
    qosClass: BestEffort
    startTime: "2025-02-07T11:53:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:38:06Z"
    generateName: longhorn-ui-5fbbcc8fb-
    labels:
      app: longhorn-ui
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.8.0
      helm.sh/chart: longhorn-1.8.0
      pod-template-hash: 5fbbcc8fb
    name: longhorn-ui-5fbbcc8fb-pmls9
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: longhorn-ui-5fbbcc8fb
      uid: 8d09b606-7f42-41ae-acd4-463bc170dffd
    resourceVersion: "72238400"
    uid: d01fe3ac-c14b-49c9-af69-ecb907ce3a09
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - longhorn-ui
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: LONGHORN_MANAGER_IP
        value: http://longhorn-backend:9500
      - name: LONGHORN_UI_PORT
        value: "8000"
      image: longhornio/longhorn-ui:v1.8.0
      imagePullPolicy: IfNotPresent
      name: longhorn-ui
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/cache/nginx/
        name: nginx-cache
      - mountPath: /var/config/nginx/
        name: nginx-config
      - mountPath: /var/run/
        name: var-run
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s859n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-ui-service-account
    serviceAccountName: longhorn-ui-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: nginx-cache
    - emptyDir: {}
      name: nginx-config
    - emptyDir: {}
      name: var-run
    - name: kube-api-access-s859n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:22Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5caf725e376143cf12cf6c9ebee6a0f3f352c10100dce634997ac2fd7839a2ef
      image: docker.io/longhornio/longhorn-ui:v1.8.0
      imageID: docker.io/longhornio/longhorn-ui@sha256:fe7a7a918535d20b030f7969b93d0d97c31db6dd2a6ed5db4e1b484344972755
      lastState: {}
      name: longhorn-ui
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:21Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.220
    podIPs:
    - ip: 192.168.5.220
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:40:20Z"
    generateName: longhorn-ui-5fbbcc8fb-
    labels:
      app: longhorn-ui
      app.kubernetes.io/instance: longhorn
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.8.0
      helm.sh/chart: longhorn-1.8.0
      pod-template-hash: 5fbbcc8fb
    name: longhorn-ui-5fbbcc8fb-vm9kl
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: longhorn-ui-5fbbcc8fb
      uid: 8d09b606-7f42-41ae-acd4-463bc170dffd
    resourceVersion: "72238418"
    uid: b9fb3e64-5688-41bd-853b-6b1b5401ea1a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - longhorn-ui
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: LONGHORN_MANAGER_IP
        value: http://longhorn-backend:9500
      - name: LONGHORN_UI_PORT
        value: "8000"
      image: longhornio/longhorn-ui:v1.8.0
      imagePullPolicy: IfNotPresent
      name: longhorn-ui
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/cache/nginx/
        name: nginx-cache
      - mountPath: /var/config/nginx/
        name: nginx-config
      - mountPath: /var/run/
        name: var-run
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4dtwz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: longhorn-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-ui-service-account
    serviceAccountName: longhorn-ui-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: nginx-cache
    - emptyDir: {}
      name: nginx-config
    - emptyDir: {}
      name: var-run
    - name: kube-api-access-4dtwz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://abf65103be6a68cff816ed879bea99f600e05d0d245552c9597f04178d87ded7
      image: docker.io/longhornio/longhorn-ui:v1.8.0
      imageID: docker.io/longhornio/longhorn-ui@sha256:fe7a7a918535d20b030f7969b93d0d97c31db6dd2a6ed5db4e1b484344972755
      lastState: {}
      name: longhorn-ui
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:22Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.215
    podIPs:
    - ip: 192.168.5.215
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "7472"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-04-16T11:38:07Z"
    generateName: controller-7dcb87658-
    labels:
      app: metallb
      component: controller
      pod-template-hash: 7dcb87658
    name: controller-7dcb87658-x2wzx
    namespace: metallb-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: controller-7dcb87658
      uid: 78b863e3-34fd-4eb6-b429-f2c11de0d2b8
    resourceVersion: "72238862"
    uid: 9c61a516-4ebf-45f7-b25a-04ff4e7ec492
  spec:
    containers:
    - args:
      - --port=7472
      - --log-level=info
      - --tls-min-version=VersionTLS12
      env:
      - name: METALLB_ML_SECRET_NAME
        value: memberlist
      - name: METALLB_DEPLOYMENT
        value: controller
      image: quay.io/metallb/controller:v0.14.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 7472
        name: monitoring
        protocol: TCP
      - containerPort: 9443
        name: webhook-server
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp/k8s-webhook-server/serving-certs
        name: cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j4gkc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: cert
      secret:
        defaultMode: 420
        secretName: metallb-webhook-cert
    - name: kube-api-access-j4gkc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b3c797513047f4ca1fef01de4f4e5770b70434b22580b7b76f39070344ce727d
      image: quay.io/metallb/controller:v0.14.9
      imageID: quay.io/metallb/controller@sha256:86261567e5ff03978893bf03ea865275283ad1e3f0f20dd342ed501b651fdf78
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:20Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.222
    podIPs:
    - ip: 192.168.5.222
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "7472"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-02-07T11:07:41Z"
    generateName: speaker-
    labels:
      app: metallb
      component: speaker
      controller-revision-hash: 6c88db67c6
      pod-template-generation: "1"
    name: speaker-gwqgm
    namespace: metallb-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: speaker
      uid: d3416e4b-a93a-48a4-b43c-d1c4ac2fd037
    resourceVersion: "70967199"
    uid: 798ae3ee-5753-43ec-9f8d-8ae8b8e0035a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - zee8608workerapi01
    containers:
    - args:
      - --port=7472
      - --log-level=info
      env:
      - name: METALLB_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: METALLB_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: METALLB_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: METALLB_ML_BIND_ADDR
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: METALLB_ML_LABELS
        value: app=metallb,component=speaker
      - name: METALLB_ML_SECRET_KEY_PATH
        value: /etc/ml_secret_key
      image: quay.io/metallb/speaker:v0.14.9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: speaker
      ports:
      - containerPort: 7472
        hostPort: 7472
        name: monitoring
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-tcp
        protocol: TCP
      - containerPort: 7946
        hostPort: 7946
        name: memberlist-udp
        protocol: UDP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /metrics
          port: monitoring
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_RAW
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ml_secret_key
        name: memberlist
        readOnly: true
      - mountPath: /etc/metallb
        name: metallb-excludel2
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4f8nv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: zee8608workerapi01
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: speaker
    serviceAccountName: speaker
    terminationGracePeriodSeconds: 2
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: memberlist
      secret:
        defaultMode: 420
        secretName: memberlist
    - configMap:
        defaultMode: 256
        name: metallb-excludel2
      name: metallb-excludel2
    - name: kube-api-access-4f8nv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:28:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T11:07:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:29:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-20T20:29:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-02-07T11:07:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1de3ea69752328fad7f653bf412c91a1ea07e2187f0bcf9ffc8a5ea81f767065
      image: quay.io/metallb/speaker:v0.14.9
      imageID: quay.io/metallb/speaker@sha256:b09a1dfcf330938950b65115cd58f6989108c0c21d3c096040e7fe9a25a92993
      lastState: {}
      name: speaker
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-06-20T20:29:24Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 10.48.219.138
    podIPs:
    - ip: 10.48.219.138
    qosClass: BestEffort
    startTime: "2025-02-07T11:07:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-08-20T13:15:16Z"
    generateName: pentemind-25-deploy-dfd88f99c-
    labels:
      app: pentemind-app
      environment: poc
      pod-template-hash: dfd88f99c
      project: zee-project
    name: pentemind-25-deploy-dfd88f99c-4fbct
    namespace: poc
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pentemind-25-deploy-dfd88f99c
      uid: fbaf2fd9-31dc-481a-bcc7-00a0e8da56b2
    resourceVersion: "101775159"
    uid: 76ad70fb-6dbf-4cde-96ad-31684c446397
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: pentemind-config-25
      - secretRef:
          name: pentemind-secrets-25
      image: devzeelearn/pentemind-apiv1-2025:28
      imagePullPolicy: Always
      name: pentemind
      ports:
      - containerPort: 5005
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7kgbp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7kgbp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-20T13:14:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-20T13:14:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-20T13:14:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-20T13:14:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-20T13:15:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://11e5a3eae06bec2164c31623127b39f2ea3e9122faf4e937c66d57340dfae84a
      image: docker.io/devzeelearn/pentemind-apiv1-2025:28
      imageID: docker.io/devzeelearn/pentemind-apiv1-2025@sha256:3d4d71a31178c12fc7bdfa785e716302450c040f80de5244cb9a6374a1bb4f5f
      lastState: {}
      name: pentemind
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-20T13:14:56Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.115
    podIPs:
    - ip: 192.168.5.115
    qosClass: Burstable
    startTime: "2025-08-20T13:14:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:53:25Z"
    generateName: cmsapi-deploy-f545f8c6d-
    labels:
      app: cmsapi-app
      environment: prod
      pod-template-hash: f545f8c6d
      project: zee-project
    name: cmsapi-deploy-f545f8c6d-zdzqk
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cmsapi-deploy-f545f8c6d
      uid: eb011958-9b3e-4597-a48b-6f761332a858
    resourceVersion: "122084102"
    uid: 4277e42b-94c7-46e1-be0b-517a0eb9581e
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: cmsapi-config
      - secretRef:
          name: cmsapi-secrets
      image: devzeelearn/cmsapi-prod:186
      imagePullPolicy: Always
      name: cmsapi
      ports:
      - containerPort: 5011
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8fhcp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-8fhcp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:53:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T11:16:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T11:16:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:53:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4b998212617cb9641bdc4eb278d9de6c64f751b96fb7854937c2608d94cba10c
      image: docker.io/devzeelearn/cmsapi-prod:186
      imageID: docker.io/devzeelearn/cmsapi-prod@sha256:bc4cf5e024c848264519cb970a0842aef124da1fc9960a0085687f9db5b75c7c
      lastState:
        terminated:
          containerID: containerd://d2505530fc37615734427d16df3dacffca90f8455e86cb951451c98f5cdbcdaf
          exitCode: 1
          finishedAt: "2025-10-01T11:16:35Z"
          reason: Error
          startedAt: "2025-10-01T11:16:32Z"
      name: cmsapi
      ready: true
      restartCount: 62
      started: true
      state:
        running:
          startedAt: "2025-10-01T11:16:48Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.168
    podIPs:
    - ip: 192.168.5.168
    qosClass: Burstable
    startTime: "2025-09-20T07:52:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-23T10:39:06Z"
    generateName: juapi-deploy-559fc8cf7c-
    labels:
      app: juapi-app
      environment: prod
      pod-template-hash: 559fc8cf7c
      project: zee-project
    name: juapi-deploy-559fc8cf7c-t8d2g
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: juapi-deploy-559fc8cf7c
      uid: 57114159-ae4d-4210-a5aa-b881305455bf
    resourceVersion: "118199048"
    uid: ed24a85d-4f9e-4de0-ac7e-d47cf4f8d80d
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: juapi-config
      - secretRef:
          name: juapi-secrets
      image: devzeelearn/juapi-prod:165
      imagePullPolicy: Always
      name: juapi
      ports:
      - containerPort: 5011
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gxxp9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gxxp9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:39:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://216e0c9f2124c5e626cfb5924383e418c30ffb545038dcbdffdece0016bcd3ca
      image: docker.io/devzeelearn/juapi-prod:165
      imageID: docker.io/devzeelearn/juapi-prod@sha256:6f687031c4149557f26fd469f132a59ed0c1553712501d94507c31e0e75e1d83
      lastState: {}
      name: juapi
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T10:38:47Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.181
    podIPs:
    - ip: 192.168.5.181
    qosClass: Burstable
    startTime: "2025-09-23T10:38:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-23T10:30:25Z"
    generateName: k12-deploy-84bb6c589d-
    labels:
      app: k12-app
      environment: prod
      pod-template-hash: 84bb6c589d
      project: zee-project
    name: k12-deploy-84bb6c589d-dkh2n
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: k12-deploy-84bb6c589d
      uid: b114b8b8-6f71-41e1-95fb-27bf727fda7f
    resourceVersion: "118195588"
    uid: a55c3b3a-1156-4211-abdd-bd05a5f31813
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: k12-config
      - secretRef:
          name: k12-secrets
      image: devzeelearn/k12-prod:169
      imagePullPolicy: Always
      name: k12
      ports:
      - containerPort: 5011
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w2p62
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w2p62
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:29:57Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:29:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:29:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:29:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:30:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f31d1ef93b7c6bf98e1b2df63b1d253a428efa9a7953d08391bd42c88f9a1f2f
      image: docker.io/devzeelearn/k12-prod:169
      imageID: docker.io/devzeelearn/k12-prod@sha256:3bce15e2e2750e17051e5357efe6132a7b16d09a7b70d7d8e9e94f9800564fa2
      lastState: {}
      name: k12
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T10:29:57Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.178
    podIPs:
    - ip: 192.168.5.178
    qosClass: Burstable
    startTime: "2025-09-23T10:29:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:52:14Z"
    generateName: literanovajr-deploy-99f4955f9-
    labels:
      app: literanovajr
      environment: prod
      pod-template-hash: 99f4955f9
      project: zee-project
    name: literanovajr-deploy-99f4955f9-2znwk
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: literanovajr-deploy-99f4955f9
      uid: 17314b4e-6fc2-4047-9b7b-3fc2d2323553
    resourceVersion: "116654941"
    uid: 01a88621-afed-47e6-b5a3-a4507a265ab9
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: literanovajr-config
      - secretRef:
          name: literanovajr-secrets
      image: devzeelearn/literanovajr-prod:7
      imagePullPolicy: Always
      name: literanovajr
      ports:
      - containerPort: 5005
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqx45
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jqx45
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7c070099c195bc368d2b134a5f76b25250c7df10f80882057d0004e133549dc1
      image: docker.io/devzeelearn/literanovajr-prod:7
      imageID: docker.io/devzeelearn/literanovajr-prod@sha256:43d57b35e86ff3e8032ec909def7afc26f5af5096af722a83e69c6388c6489a7
      lastState: {}
      name: literanovajr
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:51:57Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.165
    podIPs:
    - ip: 192.168.5.165
    qosClass: Burstable
    startTime: "2025-09-20T07:51:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:52:11Z"
    generateName: literaoctave-deploy-c5f77fcf5-
    labels:
      app: literaoctave-app
      environment: prod
      pod-template-hash: c5f77fcf5
      project: zee-project
    name: literaoctave-deploy-c5f77fcf5-mjf5h
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: literaoctave-deploy-c5f77fcf5
      uid: 2f924955-e6fa-4602-b36f-a58009dd6d71
    resourceVersion: "116654496"
    uid: 433b2783-a4a1-4bdf-b451-9f36ba38cc69
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: literaoctave-config
      - secretRef:
          name: literaoctave-secrets
      image: devzeelearn/literaoctave-prod:9
      imagePullPolicy: Always
      name: literaoctave-prod
      ports:
      - containerPort: 5015
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dvpzc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dvpzc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:17Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6fa4a2ed45816c04186bf673277baa75859e638f1ac5e9eca3e9f38a5008526b
      image: docker.io/devzeelearn/literaoctave-prod:9
      imageID: docker.io/devzeelearn/literaoctave-prod@sha256:f526260eee720d5eee4b5a35037c58c81c23cb888643a4cba98f7e1710580746
      lastState: {}
      name: literaoctave-prod
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:51:17Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.161
    podIPs:
    - ip: 192.168.5.161
    qosClass: Burstable
    startTime: "2025-09-20T07:51:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:52:15Z"
    generateName: literaoctave-deploy-c5f77fcf5-
    labels:
      app: literaoctave-app
      environment: prod
      pod-template-hash: c5f77fcf5
      project: zee-project
    name: literaoctave-deploy-c5f77fcf5-ns8zb
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: literaoctave-deploy-c5f77fcf5
      uid: 2f924955-e6fa-4602-b36f-a58009dd6d71
    resourceVersion: "116655357"
    uid: 08ffc38b-1106-4a1c-8f66-2f12b265c1c0
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: literaoctave-config
      - secretRef:
          name: literaoctave-secrets
      image: devzeelearn/literaoctave-prod:9
      imagePullPolicy: Always
      name: literaoctave-prod
      ports:
      - containerPort: 5015
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jh4zt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-jh4zt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:53:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://91f9381b3952a6782c2a3b3f91832580e1af8bb030ac8c39aff5250d873b3801
      image: docker.io/devzeelearn/literaoctave-prod:9
      imageID: docker.io/devzeelearn/literaoctave-prod@sha256:f526260eee720d5eee4b5a35037c58c81c23cb888643a4cba98f7e1710580746
      lastState: {}
      name: literaoctave-prod
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:52:33Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.167
    podIPs:
    - ip: 192.168.5.167
    qosClass: Burstable
    startTime: "2025-09-20T07:52:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:52:11Z"
    generateName: literaoctavecms-deploy-85c87cbb88-
    labels:
      app: literaoctavecms-app
      environment: prod
      pod-template-hash: 85c87cbb88
      project: zee-project
    name: literaoctavecms-deploy-85c87cbb88-7cmcl
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: literaoctavecms-deploy-85c87cbb88
      uid: c50cb490-7064-489a-8241-8485ad2be84b
    resourceVersion: "116654538"
    uid: 058d838a-e200-4590-a67b-abe3e896c1aa
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: literaoctavecms-config
      - secretRef:
          name: literaoctavecms-secrets
      image: devzeelearn/literaoctavecms-prod:6
      imagePullPolicy: Always
      name: literaoctavecms
      ports:
      - containerPort: 5011
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 4Gi
        requests:
          cpu: 500m
          memory: 2Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qqfl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6qqfl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b47051070d6bea847e551af71342e25e13f2fac4a9ad9d12edae81699f6f3f15
      image: docker.io/devzeelearn/literaoctavecms-prod:6
      imageID: docker.io/devzeelearn/literaoctavecms-prod@sha256:cd499f946dac847422f711c7e86fe9546fdf8de8b33abb2910fe10c4be555644
      lastState: {}
      name: literaoctavecms
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:51:19Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.162
    podIPs:
    - ip: 192.168.5.162
    qosClass: Burstable
    startTime: "2025-09-20T07:51:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-23T10:38:53Z"
    generateName: lmsapi-deploy-7bdbb68dd9-
    labels:
      app: lmsapi-app
      environment: prod
      pod-template-hash: 7bdbb68dd9
      project: zee-project
    name: lmsapi-deploy-7bdbb68dd9-45krh
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: lmsapi-deploy-7bdbb68dd9
      uid: 9e2c1c0e-58cf-4bb7-8bae-822d1d314edd
    resourceVersion: "118198901"
    uid: 9bc068e3-34b4-4bde-b3b7-5a38c785d683
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: lmsapi-config
      - secretRef:
          name: lmsapi-secrets
      image: devzeelearn/lmsapi-prod:221
      imagePullPolicy: IfNotPresent
      name: lmsapi
      ports:
      - containerPort: 5011
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lvv7k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lvv7k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-23T10:38:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9323d1ddb1a5d51d271d4682fc2bc75ede293b771943a94df05bdd6c16e5a6a8
      image: docker.io/devzeelearn/lmsapi-prod:221
      imageID: docker.io/devzeelearn/lmsapi-prod@sha256:77cb851dd0e9337d8c0db612d103e9d66f0dc52d867009e715111e7182f14664
      lastState: {}
      name: lmsapi
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-23T10:38:26Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.180
    podIPs:
    - ip: 192.168.5.180
    qosClass: Burstable
    startTime: "2025-09-23T10:38:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:54:31Z"
    generateName: novachat-deploy-6c57d7bf4b-
    labels:
      app: novachat-app
      environment: prod
      pod-template-hash: 6c57d7bf4b
      project: zee-project
    name: novachat-deploy-6c57d7bf4b-6gtb9
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: novachat-deploy-6c57d7bf4b
      uid: 3cc92b9d-a42a-4ada-8d86-5cd652dc7988
    resourceVersion: "116656157"
    uid: f08f38c7-fe92-43df-8cff-f7991221aab8
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: novachat-config
      - secretRef:
          name: novachat-secrets
      image: devzeelearn/novachat-prod:8
      imagePullPolicy: Always
      name: novachat
      ports:
      - containerPort: 4011
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 2Gi
        requests:
          cpu: 250m
          memory: 1Gi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-27tbf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-27tbf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:53:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:53:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:53:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:53:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:54:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://630cc257a204fc8a757322d59af4a1c2a6d15aa01d97e27949baf4695e19d484
      image: docker.io/devzeelearn/novachat-prod:8
      imageID: docker.io/devzeelearn/novachat-prod@sha256:b8fa7b83c7dfb9580d22ec04dcd2d064276fa16122d366f752b413a2d8660450
      lastState: {}
      name: novachat
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:53:36Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.171
    podIPs:
    - ip: 192.168.5.171
    qosClass: Burstable
    startTime: "2025-09-20T07:53:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:52:54Z"
    generateName: pentemind-23-deploy-945d9bfbf-
    labels:
      app: pentemind-2023
      environment: prod
      pod-template-hash: 945d9bfbf
      project: zee-project
    name: pentemind-23-deploy-945d9bfbf-c75bc
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pentemind-23-deploy-945d9bfbf
      uid: 6c76260f-303c-42bb-9302-ca627e301b6b
    resourceVersion: "116654985"
    uid: c0d45712-502e-438f-9eeb-b65d98c7f21f
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: pentemind-config-23
      - secretRef:
          name: pentemind-secrets-23
      image: devzeelearn/pentemind-apiv1-2023:19
      imagePullPolicy: Always
      name: pentemind
      ports:
      - containerPort: 5005
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gd2h2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-gd2h2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e0481bb8205219478d812f07baa67f578020e74a2758f93e350a8fbecbc483e6
      image: docker.io/devzeelearn/pentemind-apiv1-2023:19
      imageID: docker.io/devzeelearn/pentemind-apiv1-2023@sha256:c393bc9c85f2b89fc4751dbbf3d57445729bd5181dd943a4b782f40e89116b72
      lastState: {}
      name: pentemind
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:51:59Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.166
    podIPs:
    - ip: 192.168.5.166
    qosClass: Burstable
    startTime: "2025-09-20T07:51:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:52:48Z"
    generateName: pentemind-23-deploy-945d9bfbf-
    labels:
      app: pentemind-2023
      environment: prod
      pod-template-hash: 945d9bfbf
      project: zee-project
    name: pentemind-23-deploy-945d9bfbf-ng992
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pentemind-23-deploy-945d9bfbf
      uid: 6c76260f-303c-42bb-9302-ca627e301b6b
    resourceVersion: "116654902"
    uid: 5eaa729e-f4cb-4d24-8927-3cadd2d0d93c
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: pentemind-config-23
      - secretRef:
          name: pentemind-secrets-23
      image: devzeelearn/pentemind-apiv1-2023:19
      imagePullPolicy: Always
      name: pentemind
      ports:
      - containerPort: 5005
        protocol: TCP
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 256Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8zrb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-q8zrb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:51:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:52:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://11823f4ab8ec166f2f637926f4be9afd70e0e83f100e3dd729589d49748c265a
      image: docker.io/devzeelearn/pentemind-apiv1-2023:19
      imageID: docker.io/devzeelearn/pentemind-apiv1-2023@sha256:c393bc9c85f2b89fc4751dbbf3d57445729bd5181dd943a4b782f40e89116b72
      lastState: {}
      name: pentemind
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:51:55Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.164
    podIPs:
    - ip: 192.168.5.164
    qosClass: Burstable
    startTime: "2025-09-20T07:51:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T07:52:12Z"
    generateName: pentemind-25-deploy-66ffd97754-
    labels:
      app: pentemind-app
      environment: prod
      pod-template-hash: 66ffd97754
      project: zee-project
    name: pentemind-25-deploy-66ffd97754-4qkqm
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pentemind-25-deploy-66ffd97754
      uid: 6ae05a0f-7d00-43b5-8e7a-907cb16e49e4
    resourceVersion: "116658875"
    uid: e0ad1379-9efd-42cb-b515-47eca4102735
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: pentemind-config-25
      - secretRef:
          name: pentemind-secrets-25
      image: devzeelearn/pentemind-apiv1-2025-prod:18
      imagePullPolicy: Always
      name: pentemind
      ports:
      - containerPort: 5005
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kr6nf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kr6nf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:59:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:59:05Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:59:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T07:59:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T08:00:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7c96485e287e2eb382603521c30fe5f04139a6ea10f37ea0b0f62c98d7d15106
      image: docker.io/devzeelearn/pentemind-apiv1-2025-prod:18
      imageID: docker.io/devzeelearn/pentemind-apiv1-2025-prod@sha256:8d4aeb4ac277e4a98ad15193d076e768c2edfceb698e8eaf197a5cf73f90c458
      lastState: {}
      name: pentemind
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T07:59:07Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.172
    podIPs:
    - ip: 192.168.5.172
    qosClass: Burstable
    startTime: "2025-09-20T07:59:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-20T08:00:05Z"
    generateName: pentemind-25-deploy-66ffd97754-
    labels:
      app: pentemind-app
      environment: prod
      pod-template-hash: 66ffd97754
      project: zee-project
    name: pentemind-25-deploy-66ffd97754-hh7hj
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pentemind-25-deploy-66ffd97754
      uid: 6ae05a0f-7d00-43b5-8e7a-907cb16e49e4
    resourceVersion: "116659628"
    uid: a59e1448-51e6-4711-ab58-37c0a1e5e0c8
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: pentemind-config-25
      - secretRef:
          name: pentemind-secrets-25
      image: devzeelearn/pentemind-apiv1-2025-prod:18
      imagePullPolicy: Always
      name: pentemind
      ports:
      - containerPort: 5005
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 512Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mm8tk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-mm8tk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T08:00:50Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T08:00:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T08:00:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T08:00:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-20T08:01:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8b89f079383d24d1ad97d12e5a1ae3ebd3632e33778622d2482d0b012799e590
      image: docker.io/devzeelearn/pentemind-apiv1-2025-prod:18
      imageID: docker.io/devzeelearn/pentemind-apiv1-2025-prod@sha256:8d4aeb4ac277e4a98ad15193d076e768c2edfceb698e8eaf197a5cf73f90c458
      lastState: {}
      name: pentemind
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-20T08:00:50Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.174
    podIPs:
    - ip: 192.168.5.174
    qosClass: Burstable
    startTime: "2025-09-20T08:00:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2025-09-20T13:21:22+05:30"
    creationTimestamp: "2025-09-25T06:18:25Z"
    generateName: zllsaathiapi-deploy-7fb44565c9-
    labels:
      app: zllsaathiapi-app
      environment: prod
      pod-template-hash: 7fb44565c9
      project: zee-project
    name: zllsaathiapi-deploy-7fb44565c9-k2tcc
    namespace: prod
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: zllsaathiapi-deploy-7fb44565c9
      uid: 0a5cef09-749c-4517-bc06-2549a1313c09
    resourceVersion: "119092071"
    uid: 10a33087-e1f7-41cc-9e66-bc81161fb9d7
  spec:
    containers:
    - envFrom:
      - configMapRef:
          name: zllsaathiapi-config
      - secretRef:
          name: zllsaathiapi-secrets
      image: devzeelearn/zllsaathiapi-prod:8
      imagePullPolicy: Always
      name: zllsaathiapi
      ports:
      - containerPort: 3000
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 256Mi
        requests:
          cpu: 500m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5ps95
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: zee-docker-secret
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-5ps95
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-09-25T06:17:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-09-25T06:17:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-09-25T06:17:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-09-25T06:17:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-09-25T06:18:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4d5dd2658c82410a9b602520657b1fe57b0526644472589875d58ef52442fc30
      image: docker.io/devzeelearn/zllsaathiapi-prod:8
      imageID: docker.io/devzeelearn/zllsaathiapi-prod@sha256:828a3341c2c090683a0568af3961644b5dadcacbac4980546ecc62162f472e8a
      lastState: {}
      name: zllsaathiapi
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-09-25T06:17:42Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.182
    podIPs:
    - ip: 192.168.5.182
    qosClass: Burstable
    startTime: "2025-09-25T06:17:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-16T11:40:22Z"
    generateName: redis-594bb96598-
    labels:
      app: redis
      pod-template-hash: 594bb96598
    name: redis-594bb96598-d5htw
    namespace: redis
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-594bb96598
      uid: 8a852391-6299-4ce4-b063-b4c662ad3a7f
    resourceVersion: "72238724"
    uid: b1682a9f-3813-4557-91b2-cb4a11a7b544
  spec:
    containers:
    - command:
      - redis-server
      - --requirepass
      - $(REDIS_PASSWORD)
      env:
      - name: REDIS_PASSWORD
        value: ogJ4MKWbh0
      image: redis:latest
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n6s5k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: zee8608workerapi01
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-n6s5k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:49Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:45:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-23T16:34:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-16T12:48:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://998e3479ee0820a66e81d45f7b83f767d76ee6339aa8a664ca2211479146cfb6
      image: docker.io/library/redis:latest
      imageID: docker.io/library/redis@sha256:1b835e5a8d5db58e8b718850bf43a68ef5a576fc68301fd08a789b20b4eecb61
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-23T16:34:49Z"
    hostIP: 10.48.219.138
    hostIPs:
    - ip: 10.48.219.138
    phase: Running
    podIP: 192.168.5.203
    podIPs:
    - ip: 192.168.5.203
    qosClass: BestEffort
    startTime: "2025-04-16T12:45:55Z"
kind: List
metadata:
  resourceVersion: ""
