apiVersion: v1
items:
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          creationTimestamp: null
          labels:
            app: productmaster-mongodb-svc
        spec:
          containers:
          - args:
            - ""
            command:
            - /bin/sh
            - -c
            - "\nif [ -e \"/hooks/version-upgrade\" ]; then\n\t#run post-start hook
              to handle version changes (if exists)\n    /hooks/version-upgrade\nfi\n\n#
              wait for config and keyfile to be created by the agent\nwhile ! [ -f
              /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile
              ]; do sleep 3 ; done ; sleep 2 ;\n\n# start mongod with this configuration\nexec
              mongod -f /data/automation-mongod.conf;\n\n"
            env:
            - name: AGENT_STATUS_FILEPATH
              value: /healthstatus/agent-health-status.json
            image: docker.io/mongodb/mongodb-community-server:7.0.2-ubi8
            imagePullPolicy: IfNotPresent
            name: mongod
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /data
              name: data-volume
            - mountPath: /healthstatus
              name: healthstatus
            - mountPath: /hooks
              name: hooks
            - mountPath: /var/log/mongodb-mms-automation
              name: logs-volume
            - mountPath: /var/lib/mongodb-mms-automation/authentication
              name: productmaster-mongodb-keyfile
            - mountPath: /tmp
              name: tmp
          - command:
            - /bin/bash
            - -c
            - |-
              current_uid=$(id -u)
              declare -r current_uid
              if ! grep -q "${current_uid}" /etc/passwd ; then
              sed -e "s/^mongodb:/builder:/" /etc/passwd > /tmp/passwd
              echo "mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash" >> /tmp/passwd
              export NSS_WRAPPER_PASSWD=/tmp/passwd
              export LD_PRELOAD=libnss_wrapper.so
              export NSS_WRAPPER_GROUP=/etc/group
              fi
              agent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools -logFile /var/log/mongodb-mms-automation/automation-agent.log -logLevel INFO -maxLogFileDurationHrs 24
            env:
            - name: AGENT_STATUS_FILEPATH
              value: /var/log/mongodb-mms-automation/healthstatus/agent-health-status.json
            - name: AUTOMATION_CONFIG_MAP
              value: productmaster-mongodb-config
            - name: HEADLESS_AGENT
              value: "true"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            image: quay.io/mongodb/mongodb-agent-ubi:108.0.2.8729-1
            imagePullPolicy: Always
            name: mongodb-agent
            readinessProbe:
              exec:
                command:
                - /opt/scripts/readinessprobe
              failureThreshold: 40
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /opt/scripts
              name: agent-scripts
            - mountPath: /var/lib/automation/config
              name: automation-config
              readOnly: true
            - mountPath: /data
              name: data-volume
            - mountPath: /var/log/mongodb-mms-automation/healthstatus
              name: healthstatus
            - mountPath: /var/log/mongodb-mms-automation
              name: logs-volume
            - mountPath: /var/lib/mongodb-mms-automation/authentication
              name: productmaster-mongodb-keyfile
            - mountPath: /tmp
              name: tmp
          dnsPolicy: ClusterFirst
          initContainers:
          - command:
            - cp
            - version-upgrade-hook
            - /hooks/version-upgrade
            image: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.9
            imagePullPolicy: Always
            name: mongod-posthook
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /hooks
              name: hooks
          - command:
            - cp
            - /probes/readinessprobe
            - /opt/scripts/readinessprobe
            image: quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.22
            imagePullPolicy: Always
            name: mongodb-agent-readinessprobe
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /opt/scripts
              name: agent-scripts
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 2000
            runAsNonRoot: true
            runAsUser: 2000
          serviceAccount: mongodb-database
          serviceAccountName: mongodb-database
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: agent-scripts
          - name: automation-config
            secret:
              defaultMode: 416
              secretName: productmaster-mongodb-config
          - emptyDir: {}
            name: healthstatus
          - emptyDir: {}
            name: hooks
          - emptyDir: {}
            name: productmaster-mongodb-keyfile
          - emptyDir: {}
            name: tmp
  kind: ControllerRevision
  metadata:
    creationTimestamp: "2025-02-10T11:35:10Z"
    labels:
      app: productmaster-mongodb-svc
      controller.kubernetes.io/hash: 55d6fcd77f
    name: productmaster-mongodb-55d6fcd77f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: productmaster-mongodb
      uid: 42e69253-d5c8-4b50-b845-6cbc20245629
    resourceVersion: "1119842"
    uid: ac0c1edb-3d21-4b1f-b142-4305f71e35da
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          creationTimestamp: null
          labels:
            app: productmaster-mongodb-svc
        spec:
          containers:
          - args:
            - ""
            command:
            - /bin/sh
            - -c
            - "\nif [ -e \"/hooks/version-upgrade\" ]; then\n\t#run post-start hook
              to handle version changes (if exists)\n    /hooks/version-upgrade\nfi\n\n#
              wait for config and keyfile to be created by the agent\nwhile ! [ -f
              /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile
              ]; do sleep 3 ; done ; sleep 2 ;\n\n# start mongod with this configuration\nexec
              mongod -f /data/automation-mongod.conf;\n\n"
            env:
            - name: AGENT_STATUS_FILEPATH
              value: /healthstatus/agent-health-status.json
            image: docker.io/mongodb/mongodb-community-server:7.0.2-ubi8
            imagePullPolicy: IfNotPresent
            name: mongod
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /data
              name: data-volume
            - mountPath: /healthstatus
              name: healthstatus
            - mountPath: /hooks
              name: hooks
            - mountPath: /var/log/mongodb-mms-automation
              name: logs-volume
            - mountPath: /var/lib/mongodb-mms-automation/authentication
              name: productmaster-mongodb-keyfile
            - mountPath: /tmp
              name: tmp
          - command:
            - /bin/bash
            - -c
            - |-
              current_uid=$(id -u)
              declare -r current_uid
              if ! grep -q "${current_uid}" /etc/passwd ; then
              sed -e "s/^mongodb:/builder:/" /etc/passwd > /tmp/passwd
              echo "mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash" >> /tmp/passwd
              export NSS_WRAPPER_PASSWD=/tmp/passwd
              export LD_PRELOAD=libnss_wrapper.so
              export NSS_WRAPPER_GROUP=/etc/group
              fi
              agent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools -logFile /var/log/mongodb-mms-automation/automation-agent.log -logLevel INFO -maxLogFileDurationHrs 24
            env:
            - name: AGENT_STATUS_FILEPATH
              value: /var/log/mongodb-mms-automation/healthstatus/agent-health-status.json
            - name: AUTOMATION_CONFIG_MAP
              value: productmaster-mongodb-config
            - name: HEADLESS_AGENT
              value: "true"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            image: quay.io/mongodb/mongodb-agent-ubi:108.0.2.8729-1
            imagePullPolicy: Always
            name: mongodb-agent
            readinessProbe:
              exec:
                command:
                - /opt/scripts/readinessprobe
              failureThreshold: 40
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 1
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /opt/scripts
              name: agent-scripts
            - mountPath: /var/lib/automation/config
              name: automation-config
              readOnly: true
            - mountPath: /data
              name: data-volume
            - mountPath: /var/log/mongodb-mms-automation/healthstatus
              name: healthstatus
            - mountPath: /var/log/mongodb-mms-automation
              name: logs-volume
            - mountPath: /var/lib/mongodb-mms-automation/authentication
              name: productmaster-mongodb-keyfile
            - mountPath: /tmp
              name: tmp
          dnsPolicy: ClusterFirst
          initContainers:
          - command:
            - cp
            - version-upgrade-hook
            - /hooks/version-upgrade
            image: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.9
            imagePullPolicy: Always
            name: mongod-posthook
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /hooks
              name: hooks
          - command:
            - cp
            - /probes/readinessprobe
            - /opt/scripts/readinessprobe
            image: quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.22
            imagePullPolicy: Always
            name: mongodb-agent-readinessprobe
            resources:
              limits:
                cpu: "1"
                memory: 500M
              requests:
                cpu: 500m
                memory: 400M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /opt/scripts
              name: agent-scripts
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            fsGroup: 2000
            runAsNonRoot: true
            runAsUser: 2000
          serviceAccount: mongodb-database
          serviceAccountName: mongodb-database
          terminationGracePeriodSeconds: 30
          volumes:
          - emptyDir: {}
            name: agent-scripts
          - name: automation-config
            secret:
              defaultMode: 416
              secretName: productmaster-mongodb-config
          - emptyDir: {}
            name: healthstatus
          - emptyDir: {}
            name: hooks
          - emptyDir: {}
            name: productmaster-mongodb-keyfile
          - emptyDir: {}
            name: tmp
  kind: ControllerRevision
  metadata:
    creationTimestamp: "2025-02-10T11:35:10Z"
    labels:
      app: productmaster-mongodb-svc
      controller.kubernetes.io/hash: 55d6fcd77f
    name: productmaster-mongodb-arb-55d6fcd77f
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: productmaster-mongodb-arb
      uid: 42212c58-214d-42d5-98c1-998ae8a92909
    resourceVersion: "1119846"
    uid: 188c37e5-4aef-4429-9265-a71c975b3547
  revision: 1
kind: List
metadata:
  resourceVersion: ""
