apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: ks-core
      meta.helm.sh/release-namespace: kubesphere-system
    creationTimestamp: "2025-02-10T06:58:20Z"
    generation: 1
    labels:
      app: ks-apiserver
      app.kubernetes.io/managed-by: Helm
      tier: backend
      version: v3.3.2
    name: ks-apiserver
    namespace: kubesphere-system
    resourceVersion: "70961421"
    uid: 1787588d-1eef-414c-811c-b22199b3250f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ks-apiserver
        tier: backend
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ks-apiserver
          tier: backend
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - ""
              weight: 100
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ks-apiserver
              namespaces:
              - kubesphere-system
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - ks-apiserver
          - --logtostderr=true
          image: kubesphere/ks-apiserver:v3.4.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: ks-apiserver
          ports:
          - containerPort: 9090
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/kubesphere/ingress-controller
            name: ks-router-config
          - mountPath: /etc/kubesphere/
            name: kubesphere-config
          - mountPath: /etc/localtime
            name: host-time
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubesphere
        serviceAccountName: kubesphere
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
        volumes:
        - configMap:
            defaultMode: 420
            name: ks-router-config
          name: ks-router-config
        - configMap:
            defaultMode: 420
            name: kubesphere-config
          name: kubesphere-config
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-02-10T06:58:22Z"
      lastUpdateTime: "2025-02-10T06:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-02-10T06:58:22Z"
      lastUpdateTime: "2025-02-10T07:04:43Z"
      message: ReplicaSet "ks-apiserver-945bb6c8c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: ks-core
      meta.helm.sh/release-namespace: kubesphere-system
    creationTimestamp: "2025-02-10T06:58:20Z"
    generation: 1
    labels:
      app: ks-console
      app.kubernetes.io/managed-by: Helm
      tier: frontend
      version: v3.3.2
    name: ks-console
    namespace: kubesphere-system
    resourceVersion: "70961431"
    uid: 8c04f092-fa90-44ba-b8e8-49aa51a7c3a2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ks-console
        tier: frontend
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ks-console
          tier: frontend
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - ""
              weight: 100
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ks-console
              namespaces:
              - kubesphere-system
              topologyKey: kubernetes.io/hostname
        containers:
        - image: kubesphere/ks-console:v3.4.1
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 8
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8000
            timeoutSeconds: 15
          name: ks-console
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/kubesphere/console/server/local_config.yaml
            name: ks-console-config
            subPath: local_config.yaml
          - mountPath: /opt/kubesphere/console/server/sample
            name: sample-bookinfo
          - mountPath: /etc/localtime
            name: host-time
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubesphere
        serviceAccountName: kubesphere
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: local_config.yaml
              path: local_config.yaml
            name: ks-console-config
          name: ks-console-config
        - configMap:
            defaultMode: 420
            name: sample-bookinfo
          name: sample-bookinfo
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-02-10T06:58:22Z"
      lastUpdateTime: "2025-02-10T06:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-02-10T06:58:22Z"
      lastUpdateTime: "2025-02-10T06:58:32Z"
      message: ReplicaSet "ks-console-7bcbf87f4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: ks-core
      meta.helm.sh/release-namespace: kubesphere-system
    creationTimestamp: "2025-02-10T06:58:20Z"
    generation: 1
    labels:
      app: ks-controller-manager
      app.kubernetes.io/managed-by: Helm
      tier: backend
      version: v3.3.2
    name: ks-controller-manager
    namespace: kubesphere-system
    resourceVersion: "91798985"
    uid: e66666d6-961f-4e18-83b0-66d59d899509
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ks-controller-manager
        tier: backend
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ks-controller-manager
          tier: backend
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - ""
              weight: 100
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ks-controller-manager
              namespaces:
              - kubesphere-system
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - controller-manager
          - --logtostderr=true
          - --leader-elect=true
          image: kubesphere/ks-controller-manager:v3.4.1
          imagePullPolicy: Always
          name: ks-controller-manager
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1000Mi
            requests:
              cpu: 30m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/kubesphere/
            name: kubesphere-config
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: webhook-secret
          - mountPath: /etc/localtime
            name: host-time
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kubesphere
        serviceAccountName: kubesphere
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
        volumes:
        - configMap:
            defaultMode: 420
            name: kubesphere-config
          name: kubesphere-config
        - name: webhook-secret
          secret:
            defaultMode: 420
            secretName: ks-controller-manager-webhook-cert
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
  status:
    conditions:
    - lastTransitionTime: "2025-02-10T06:58:22Z"
      lastUpdateTime: "2025-02-10T06:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-02-10T06:58:22Z"
      lastUpdateTime: "2025-02-10T07:04:44Z"
      message: ReplicaSet "ks-controller-manager-6c9757d557" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"ks-installer"},"name":"ks-installer","namespace":"kubesphere-system"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"ks-installer"}},"template":{"metadata":{"labels":{"app":"ks-installer"}},"spec":{"containers":[{"image":"kubesphere/ks-installer:v3.4.1","imagePullPolicy":"Always","name":"installer","resources":{"limits":{"cpu":"1","memory":"1Gi"},"requests":{"cpu":"20m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"/etc/localtime","name":"host-time","readOnly":true}]}],"serviceAccountName":"ks-installer","volumes":[{"hostPath":{"path":"/etc/localtime","type":""},"name":"host-time"}]}}}}
    creationTimestamp: "2025-02-10T06:54:32Z"
    generation: 1
    labels:
      app: ks-installer
    name: ks-installer
    namespace: kubesphere-system
    resourceVersion: "70972007"
    uid: 5c467106-a9f5-4186-a559-9dda62ef7e8d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ks-installer
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ks-installer
      spec:
        containers:
        - image: kubesphere/ks-installer:v3.4.1
          imagePullPolicy: Always
          name: installer
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/localtime
            name: host-time
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ks-installer
        serviceAccountName: ks-installer
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /etc/localtime
            type: ""
          name: host-time
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-02-10T06:54:32Z"
      lastUpdateTime: "2025-02-10T06:54:51Z"
      message: ReplicaSet "ks-installer-6647685479" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-20T21:10:26Z"
      lastUpdateTime: "2025-06-20T21:10:26Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
