apiVersion: v1
items:
- apiVersion: v1
  data:
    local_config.yaml: |
      server:
        http:
          hostname: localhost
          port: 8000
          static:
            production:
              /public: server/public
              /assets: dist/assets
              /dist: dist
        redis:
          port: 6379
          host: redis.kubesphere-system.svc
        redisTimeout: 5000
        sessionTimeout: 7200000
      client:
        version:
          kubesphere: v3.3.2
          kubernetes: v1.30.9
          openpitrix: v3.3.2
        enableKubeConfig: true
      defaultClusterName: default
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: ks-core
      meta.helm.sh/release-namespace: kubesphere-system
    creationTimestamp: "2025-02-10T06:58:20Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: ks-console-config
    namespace: kubesphere-system
    resourceVersion: "1021538"
    uid: 5b342f94-8286-4cef-aaf6-ab1a0f986f16
- apiVersion: v1
  data:
    ingress-controller-svc.yaml: |
      apiVersion: v1
      kind: Service
      metadata:
        name: kubesphere-router-gateway
        labels:
          app: kubesphere
          component: ks-router
          tier: backend
      spec:
        selector:
          app: kubesphere
          component: ks-router
          tier: backend
        type: LoadBalancer
        ports:
          - name: http
            protocol: TCP
            port: 80
            targetPort: 80
          - name: https
            protocol: TCP
            port: 443
            targetPort: 443
    ingress-controller.yaml: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: ks-router
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: kubesphere
            component: ks-router
            tier: backend
        template:
          metadata:
            labels:
              app: kubesphere
              component: ks-router
              tier: backend
            annotations:
              prometheus.io/port: '10254'
              prometheus.io/scrape: 'true'
          spec:
            serviceAccountName: kubesphere-router-serviceaccount
            containers:
              - name: nginx-ingress-controller
                image: kubesphere/nginx-ingress-controller:v1.3.1
                args:
                  - /nginx-ingress-controller
                  - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
                  - --annotations-prefix=nginx.ingress.kubernetes.io
                  - --update-status
                  - --update-status-on-shutdown
                env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: POD_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                ports:
                - name: http
                  containerPort: 80
                - name: https
                  containerPort: 443
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 10254
                    scheme: HTTP
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                readinessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 10254
                    scheme: HTTP
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 1
                securityContext:
                  runAsNonRoot: false
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: ks-core
      meta.helm.sh/release-namespace: kubesphere-system
    creationTimestamp: "2025-02-10T06:58:20Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: ks-router-config
    namespace: kubesphere-system
    resourceVersion: "1021537"
    uid: 923f190b-82e7-459a-bd6e-105f687fca14
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIBGpEgb8zVRswDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTAyMDcwNzU0MDZaFw0zNTAyMDUwNzU5MDZaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDcKXkUtHMKM7qeci7OlLNez2FlydMAt9l6KKkywvtuLyaMIrJKbFPh8hml
      H2dnMm7PRXcy/xoZFucFHfjaUY+euYJ6cf3MAoQfG/SfgpA5TRqEPbdxwc+GHDy7
      6ZoH9gIYHLkdeRUw0QTKKZTNYmRhRZ7oLjRmssL0kSpWOrg3EdN/K95ZT4eczUrl
      ts/rLLJPILP6LuWGllkIqnKBpm95RbpeGfTCoCAYbYIpbm0XzbybHeJuar+mA2kG
      Vhv8LJH9HIUCPTPLY4eUNFM5yAOlqR4p2tKpIHcaQC8WZhJqQBd3/OLx1fDnEsu5
      KCg99V39QHNmXONGKNdVZdnvCa8DAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRSbsFhjuaavB3D2AJAgY6/Kg93NDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBtFumnVigF
      ZqgHe3ok8jdx/o48sBfKM+N+eiqEKsuVuWhiYcMGhlXqqvgX5qHDcM+QPC2x4QxE
      NiZ0beIXwVs/xeOx9KeoPfnem58Ke51qlCBiTZrPTFhCIGUfqpD9SAxFRXX/4Re+
      ff8hORHxXHM+mo9fRUIsDkEON3IoFbImuq0bfklHbPfFJ1z+f/Fg+3bG4bUcMRDG
      /N3BorYqcnQxsvXlZpw3yDQrm3VukCTZSKm3FAuakJlBntmxHM4UewnN0VaF8ZAR
      dfz/NBVYyrEu/zPNPOYYHVLLfcMPbtlxnCnQuBB5C6Bv0hH1YNcwvEObxZH4+8G0
      O6YN95NGdZMw
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-02-10T06:54:31Z"
    name: kube-root-ca.crt
    namespace: kubesphere-system
    resourceVersion: "1020362"
    uid: cb03c6e7-9cc4-401f-87b6-3c0e5b900cbf
- apiVersion: v1
  data:
    kubesphere.yaml: |
      authentication:
        authenticateRateLimiterMaxTries: 10
        authenticateRateLimiterDuration: 10m0s
        loginHistoryRetentionPeriod: 168h
        maximumClockSkew: 10s
        multipleLogin: True
        kubectlImage: kubesphere/kubectl:v1.22.0
        jwtSecret: "0R7TVHmiHC4DphasYwprsXDrtCvmCWat"
        oauthOptions:
          clients:
          - name: kubesphere
            secret: kubesphere
            redirectURIs:
            - '*'
      network:
        ippoolType: none
      multicluster:
        clusterRole: none
      monitoring:
        endpoint: http://prometheus-operated.kubesphere-monitoring-system.svc:9090
        enableGPUMonitoring: false
      gpu:
        kinds:
        - resourceName: nvidia.com/gpu
          resourceType: GPU
          default: True
      notification:
        endpoint: http://notification-manager-svc.kubesphere-monitoring-system.svc:19093
      auditing:
        enable: true
        webhookURL: https://kube-auditing-webhook-svc.kubesphere-logging-system.svc:6443/audit/webhook/event
        host: https://opensearch-cluster-data.kubesphere-logging-system.svc:9200
        basicAuth: True
        username: "admin"
        password: "admin"
        indexPrefix: ks-whizard-auditing
      alerting:
        prometheusEndpoint: http://prometheus-operated.kubesphere-monitoring-system.svc:9090
        thanosRulerEndpoint: http://thanos-ruler-operated.kubesphere-monitoring-system.svc:10902
        thanosRuleResourceLabels: thanos-ruler=kubesphere,role=alert-rules


      terminal:
        image: alpine:3.14
        timeout: 600
      gateway:
        watchesPath: /var/helm-charts/watches.yaml
        repository: kubesphere/nginx-ingress-controller
        tag: v1.3.1
        namespace: kubesphere-controls-system
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"kubesphere.yaml":"authentication:\n  authenticateRateLimiterMaxTries: 10\n  authenticateRateLimiterDuration: 10m0s\n  loginHistoryRetentionPeriod: 168h\n  maximumClockSkew: 10s\n  multipleLogin: True\n  kubectlImage: kubesphere/kubectl:v1.22.0\n  jwtSecret: \"0R7TVHmiHC4DphasYwprsXDrtCvmCWat\"\n  oauthOptions:\n    clients:\n    - name: kubesphere\n      secret: kubesphere\n      redirectURIs:\n      - '*'\nnetwork:\n  ippoolType: none\nmulticluster:\n  clusterRole: none\nmonitoring:\n  endpoint: http://prometheus-operated.kubesphere-monitoring-system.svc:9090\n  enableGPUMonitoring: false\ngpu:\n  kinds:\n  - resourceName: nvidia.com/gpu\n    resourceType: GPU\n    default: True\nnotification:\n  endpoint: http://notification-manager-svc.kubesphere-monitoring-system.svc:19093\nauditing:\n  enable: true\n  webhookURL: https://kube-auditing-webhook-svc.kubesphere-logging-system.svc:6443/audit/webhook/event\n  host: https://opensearch-cluster-data.kubesphere-logging-system.svc:9200\n  basicAuth: True\n  username: \"admin\"\n  password: \"admin\"\n  indexPrefix: ks-whizard-auditing\nalerting:\n  prometheusEndpoint: http://prometheus-operated.kubesphere-monitoring-system.svc:9090\n  thanosRulerEndpoint: http://thanos-ruler-operated.kubesphere-monitoring-system.svc:10902\n  thanosRuleResourceLabels: thanos-ruler=kubesphere,role=alert-rules\n\n\nterminal:\n  image: alpine:3.14\n  timeout: 600\ngateway:\n  watchesPath: /var/helm-charts/watches.yaml\n  repository: kubesphere/nginx-ingress-controller\n  tag: v1.3.1\n  namespace: kubesphere-controls-system\n"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"kubesphere-config","namespace":"kubesphere-system"}}
    creationTimestamp: "2025-02-10T07:03:57Z"
    name: kubesphere-config
    namespace: kubesphere-system
    resourceVersion: "11877650"
    uid: 26324d3d-518e-4ce7-9e6b-93a62937fed6
- apiVersion: v1
  data:
    bookinfo.yaml: |
      apiVersion: app.k8s.io/v1beta1
      kind: Application
      metadata:
        name: bookinfo
        namespace: servicemesh
        labels:
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        annotations:
          servicemesh.kubesphere.io/enabled: 'true'
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
        addOwnerRef: true
        descriptor:
          icons:
            - src: '/assets/bookinfo.svg'
        componentKinds:
          - group: ''
            kind: Service
          - group: apps
            kind: Deployment
          - group: apps
            kind: StatefulSet
          - group: extensions
            kind: Ingress
          - group: servicemesh.kubesphere.io
            kind: Strategy
          - group: servicemesh.kubesphere.io
            kind: ServicePolicy

      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        namespace: servicemesh
        annotations:
          kubesphere.io/isElasticReplicas: 'false'
          servicemesh.kubesphere.io/enabled: 'true'
        labels:
          app: productpage
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        name: productpage-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: productpage
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
        template:
          metadata:
            labels:
              app: productpage
              version: v1
              app.kubernetes.io/version: v1
              app.kubernetes.io/name: bookinfo
            annotations:
              sidecar.istio.io/inject: 'true'
          spec:
            containers:
              - name: productpage
                resources:
                  requests:
                    cpu: 10m
                    memory: 10Mi
                  limits:
                    cpu: '1'
                    memory: 1000Mi
                imagePullPolicy: IfNotPresent
                image: kubesphere/examples-bookinfo-productpage-v1:1.16.2
                ports:
                  - name: http-web
                    protocol: TCP
                    containerPort: 9080
                    servicePort: 9080
            serviceAccount: default
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
      ---
      apiVersion: v1
      kind: Service
      metadata:
        namespace: servicemesh
        labels:
          app: productpage
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        annotations:
          kubesphere.io/workloadType: Deployment
          servicemesh.kubesphere.io/enabled: 'true'
        name: productpage
      spec:
        type: ClusterIP
        sessionAffinity: None
        selector:
          app: productpage
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        ports:
          - name: http-web
            protocol: TCP
            port: 9080
            targetPort: 9080

      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        namespace: servicemesh
        annotations:
          kubesphere.io/isElasticReplicas: 'false'
          servicemesh.kubesphere.io/enabled: 'true'
        labels:
          app: reviews
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        name: reviews-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: reviews
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
        template:
          metadata:
            labels:
              app: reviews
              version: v1
              app.kubernetes.io/version: v1
              app.kubernetes.io/name: bookinfo
            annotations:
              sidecar.istio.io/inject: 'true'
          spec:
            containers:
              - name: reviews
                resources:
                  requests:
                    cpu: 10m
                    memory: 10Mi
                  limits:
                    cpu: '1'
                    memory: 1000Mi
                imagePullPolicy: IfNotPresent
                image: kubesphere/examples-bookinfo-reviews-v1:1.16.2
                ports:
                  - name: http-web
                    protocol: TCP
                    containerPort: 9080
                    servicePort: 9080
            serviceAccount: default
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
      ---
      apiVersion: v1
      kind: Service
      metadata:
        namespace: servicemesh
        labels:
          app: reviews
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        annotations:
          kubesphere.io/workloadType: Deployment
          servicemesh.kubesphere.io/enabled: 'true'
        name: reviews
      spec:
        type: ClusterIP
        sessionAffinity: None
        selector:
          app: reviews
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        ports:
          - name: http-web
            protocol: TCP
            port: 9080
            targetPort: 9080

      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        namespace: servicemesh
        annotations:
          kubesphere.io/isElasticReplicas: 'false'
          servicemesh.kubesphere.io/enabled: 'true'
        labels:
          app: details
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        name: details-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: details
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
        template:
          metadata:
            labels:
              app: details
              version: v1
              app.kubernetes.io/version: v1
              app.kubernetes.io/name: bookinfo
            annotations:
              sidecar.istio.io/inject: 'true'
          spec:
            containers:
              - name: details
                resources:
                  requests:
                    cpu: 10m
                    memory: 10Mi
                  limits:
                    cpu: '1'
                    memory: 1000Mi
                imagePullPolicy: IfNotPresent
                image: kubesphere/examples-bookinfo-details-v1:1.16.2
                ports:
                  - name: http-web
                    protocol: TCP
                    containerPort: 9080
                    servicePort: 9080
            serviceAccount: default
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
      ---
      apiVersion: v1
      kind: Service
      metadata:
        namespace: servicemesh
        labels:
          app: details
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        annotations:
          kubesphere.io/workloadType: Deployment
          servicemesh.kubesphere.io/enabled: 'true'
        name: details
      spec:
        type: ClusterIP
        sessionAffinity: None
        selector:
          app: details
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        ports:
          - name: http-web
            protocol: TCP
            port: 9080
            targetPort: 9080

      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        namespace: servicemesh
        annotations:
          kubesphere.io/isElasticReplicas: 'false'
          servicemesh.kubesphere.io/enabled: 'true'
        labels:
          app: ratings
          version: v1
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        name: ratings-v1
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: ratings
            version: v1
            app.kubernetes.io/version: v1
            app.kubernetes.io/name: bookinfo
        template:
          metadata:
            labels:
              app: ratings
              version: v1
              app.kubernetes.io/version: v1
              app.kubernetes.io/name: bookinfo
            annotations:
              sidecar.istio.io/inject: 'true'
          spec:
            containers:
              - name: ratings
                resources:
                  requests:
                    cpu: 10m
                    memory: 10Mi
                  limits:
                    cpu: '1'
                    memory: 1000Mi
                imagePullPolicy: IfNotPresent
                image: kubesphere/examples-bookinfo-ratings-v1:1.16.3
                ports:
                  - name: http-web
                    protocol: TCP
                    containerPort: 9080
                    servicePort: 9080
            serviceAccount: default
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
      ---
      apiVersion: v1
      kind: Service
      metadata:
        namespace: servicemesh
        labels:
          app: ratings
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        annotations:
          kubesphere.io/workloadType: Deployment
          servicemesh.kubesphere.io/enabled: 'true'
        name: ratings
      spec:
        type: ClusterIP
        sessionAffinity: None
        selector:
          app: ratings
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        ports:
          - name: http-web
            protocol: TCP
            port: 9080
            targetPort: 9080

      ---
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        namespace: servicemesh
        labels:
          app.kubernetes.io/version: v1
          app.kubernetes.io/name: bookinfo
        name: bookinfo-ingress
      spec:
        rules:
          - http:
              paths:
              - backend:
                  service:
                    name: productpage
                    port:
                      number: 9080
                path: /
                pathType: ImplementationSpecific
            host: productpage.servicemesh.139.198.121.92.nip.io
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: ks-core
      meta.helm.sh/release-namespace: kubesphere-system
    creationTimestamp: "2025-02-10T06:58:20Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: sample-bookinfo
    namespace: kubesphere-system
    resourceVersion: "1021540"
    uid: 528a4de9-1915-4ca2-9c9b-8c386105a52b
kind: List
metadata:
  resourceVersion: ""
